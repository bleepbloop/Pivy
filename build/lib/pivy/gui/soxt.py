# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

"""
The soxt module is a wrapper for the SoXt library.
"""

from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_soxt', [dirname(__file__)])
        except ImportError:
            import _soxt
            return _soxt
        if fp is not None:
            try:
                _mod = imp.load_module('_soxt', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _soxt = swig_import_helper()
    del swig_import_helper
else:
    import _soxt
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


def _swig_setattr_nondynamic_method(set):
    def set_attr(self,name,value):
        if (name == "thisown"): return self.this.own(value)
        if hasattr(self,name) or (name == "this"):
            set(self,name,value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


class charp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_charp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_charp
    __del__ = lambda self : None;
    def assign(self, *args): return _soxt.charp_assign(self, *args)
    def value(self): return _soxt.charp_value(self)
    def cast(self): return _soxt.charp_cast(self)
    frompointer = staticmethod(_soxt.charp_frompointer)
charp_swigregister = _soxt.charp_swigregister
charp_swigregister(charp)
cast = _soxt.cast

def charp_frompointer(*args):
  return _soxt.charp_frompointer(*args)
charp_frompointer = _soxt.charp_frompointer

class intp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_intp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_intp
    __del__ = lambda self : None;
    def assign(self, *args): return _soxt.intp_assign(self, *args)
    def value(self): return _soxt.intp_value(self)
    def cast(self): return _soxt.intp_cast(self)
    frompointer = staticmethod(_soxt.intp_frompointer)
intp_swigregister = _soxt.intp_swigregister
intp_swigregister(intp)

def intp_frompointer(*args):
  return _soxt.intp_frompointer(*args)
intp_frompointer = _soxt.intp_frompointer

class longp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_longp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_longp
    __del__ = lambda self : None;
    def assign(self, *args): return _soxt.longp_assign(self, *args)
    def value(self): return _soxt.longp_value(self)
    def cast(self): return _soxt.longp_cast(self)
    frompointer = staticmethod(_soxt.longp_frompointer)
longp_swigregister = _soxt.longp_swigregister
longp_swigregister(longp)

def longp_frompointer(*args):
  return _soxt.longp_frompointer(*args)
longp_frompointer = _soxt.longp_frompointer

class floatp(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_floatp()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_floatp
    __del__ = lambda self : None;
    def assign(self, *args): return _soxt.floatp_assign(self, *args)
    def value(self): return _soxt.floatp_value(self)
    def cast(self): return _soxt.floatp_cast(self)
    frompointer = staticmethod(_soxt.floatp_frompointer)
floatp_swigregister = _soxt.floatp_swigregister
floatp_swigregister(floatp)

def floatp_frompointer(*args):
  return _soxt.floatp_frompointer(*args)
floatp_frompointer = _soxt.floatp_frompointer

class doublep(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_doublep()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_doublep
    __del__ = lambda self : None;
    def assign(self, *args): return _soxt.doublep_assign(self, *args)
    def value(self): return _soxt.doublep_value(self)
    def cast(self): return _soxt.doublep_cast(self)
    frompointer = staticmethod(_soxt.doublep_frompointer)
doublep_swigregister = _soxt.doublep_swigregister
doublep_swigregister(doublep)

def doublep_frompointer(*args):
  return _soxt.doublep_frompointer(*args)
doublep_frompointer = _soxt.doublep_frompointer

FALSE = _soxt.FALSE
TRUE = _soxt.TRUE
HAVE_INTTYPES_H = _soxt.HAVE_INTTYPES_H
HAVE_STDINT_H = _soxt.HAVE_STDINT_H
HAVE_SYS_TYPES_H = _soxt.HAVE_SYS_TYPES_H
HAVE_STDDEF_H = _soxt.HAVE_STDDEF_H
HAVE_INT8_T = _soxt.HAVE_INT8_T
HAVE_UINT8_T = _soxt.HAVE_UINT8_T
HAVE_INT16_T = _soxt.HAVE_INT16_T
HAVE_UINT16_T = _soxt.HAVE_UINT16_T
HAVE_INT32_T = _soxt.HAVE_INT32_T
HAVE_UINT32_T = _soxt.HAVE_UINT32_T
HAVE_INT64_T = _soxt.HAVE_INT64_T
HAVE_UINT64_T = _soxt.HAVE_UINT64_T
HAVE_INTPTR_T = _soxt.HAVE_INTPTR_T
HAVE_UINTPTR_T = _soxt.HAVE_UINTPTR_T
M_E = _soxt.M_E
M_LOG2E = _soxt.M_LOG2E
M_LOG10E = _soxt.M_LOG10E
M_LN2 = _soxt.M_LN2
M_LN10 = _soxt.M_LN10
M_PI = _soxt.M_PI
M_TWOPI = _soxt.M_TWOPI
M_PI_2 = _soxt.M_PI_2
M_PI_4 = _soxt.M_PI_4
M_3PI_4 = _soxt.M_3PI_4
M_SQRTPI = _soxt.M_SQRTPI
M_1_PI = _soxt.M_1_PI
M_2_PI = _soxt.M_2_PI
M_2_SQRTPI = _soxt.M_2_SQRTPI
M_SQRT2 = _soxt.M_SQRT2
M_SQRT1_2 = _soxt.M_SQRT1_2
M_LN2LO = _soxt.M_LN2LO
M_LN2HI = _soxt.M_LN2HI
M_SQRT3 = _soxt.M_SQRT3
M_IVLN10 = _soxt.M_IVLN10
M_LOG2_E = _soxt.M_LOG2_E
M_INVLN2 = _soxt.M_INVLN2
COIN_MAJOR_VERSION = _soxt.COIN_MAJOR_VERSION
COIN_MINOR_VERSION = _soxt.COIN_MINOR_VERSION
COIN_MICRO_VERSION = _soxt.COIN_MICRO_VERSION
COIN_VERSION = _soxt.COIN_VERSION
HAVE_HASH_QUOTING = _soxt.HAVE_HASH_QUOTING
SUN_CC_4_0_SOTYPE_INIT_BUG = _soxt.SUN_CC_4_0_SOTYPE_INIT_BUG
class SbDict(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soxt.new_SbDict(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SbDict
    __del__ = lambda self : None;
    def applyToAll(self, *args): return _soxt.SbDict_applyToAll(self, *args)
    def clear(self): return _soxt.SbDict_clear(self)
    def enter(self, *args): return _soxt.SbDict_enter(self, *args)
    def find(self, *args): return _soxt.SbDict_find(self, *args)
    def makePList(self, *args): return _soxt.SbDict_makePList(self, *args)
    def remove(self, *args): return _soxt.SbDict_remove(self, *args)
    def setHashingFunction(self, *args): return _soxt.SbDict_setHashingFunction(self, *args)
SbDict_swigregister = _soxt.SbDict_swigregister
SbDict_swigregister(SbDict)

class SoType(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    fromName = staticmethod(_soxt.SoType_fromName)
    def getName(self): return _soxt.SoType_getName(self)
    def getParent(self): return _soxt.SoType_getParent(self)
    def isDerivedFrom(self, *args): return _soxt.SoType_isDerivedFrom(self, *args)
    getAllDerivedFrom = staticmethod(_soxt.SoType_getAllDerivedFrom)
    def canCreateInstance(self): return _soxt.SoType_canCreateInstance(self)
    def getData(self): return _soxt.SoType_getData(self)
    def getKey(self): return _soxt.SoType_getKey(self)
    def __eq__(self, *args): return _soxt.SoType___eq__(self, *args)
    def __ne__(self, *args): return _soxt.SoType___ne__(self, *args)
    def __lt__(self, *args): return _soxt.SoType___lt__(self, *args)
    def __le__(self, *args): return _soxt.SoType___le__(self, *args)
    def __ge__(self, *args): return _soxt.SoType___ge__(self, *args)
    def __gt__(self, *args): return _soxt.SoType___gt__(self, *args)
    removeType = staticmethod(_soxt.SoType_removeType)
    init = staticmethod(_soxt.SoType_init)
    fromKey = staticmethod(_soxt.SoType_fromKey)
    badType = staticmethod(_soxt.SoType_badType)
    def isBad(self): return _soxt.SoType_isBad(self)
    def makeInternal(self): return _soxt.SoType_makeInternal(self)
    def isInternal(self): return _soxt.SoType_isInternal(self)
    getNumTypes = staticmethod(_soxt.SoType_getNumTypes)
    def getInstantiationMethod(self): return _soxt.SoType_getInstantiationMethod(self)
    def createInstance(self): return _soxt.SoType_createInstance(self)
    def __init__(self): 
        """__init__(self) -> SoType"""
        this = _soxt.new_SoType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoType
    __del__ = lambda self : None;
SoType_swigregister = _soxt.SoType_swigregister
SoType_swigregister(SoType)

def SoType_fromName(*args):
  return _soxt.SoType_fromName(*args)
SoType_fromName = _soxt.SoType_fromName

def SoType_getAllDerivedFrom(*args):
  return _soxt.SoType_getAllDerivedFrom(*args)
SoType_getAllDerivedFrom = _soxt.SoType_getAllDerivedFrom

def SoType_removeType(*args):
  return _soxt.SoType_removeType(*args)
SoType_removeType = _soxt.SoType_removeType

def SoType_init():
  return _soxt.SoType_init()
SoType_init = _soxt.SoType_init

def SoType_fromKey(*args):
  return _soxt.SoType_fromKey(*args)
SoType_fromKey = _soxt.SoType_fromKey

def SoType_badType():
  return _soxt.SoType_badType()
SoType_badType = _soxt.SoType_badType

def SoType_getNumTypes():
  return _soxt.SoType_getNumTypes()
SoType_getNumTypes = _soxt.SoType_getNumTypes

class SbPList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soxt.new_SbPList(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SbPList
    __del__ = lambda self : None;
    def copy(self, *args): return _soxt.SbPList_copy(self, *args)
    def fit(self): return _soxt.SbPList_fit(self)
    def append(self, *args): return _soxt.SbPList_append(self, *args)
    def find(self, *args): return _soxt.SbPList_find(self, *args)
    def insert(self, *args): return _soxt.SbPList_insert(self, *args)
    def removeItem(self, *args): return _soxt.SbPList_removeItem(self, *args)
    def remove(self, *args): return _soxt.SbPList_remove(self, *args)
    def removeFast(self, *args): return _soxt.SbPList_removeFast(self, *args)
    def getLength(self): return _soxt.SbPList_getLength(self)
    def truncate(self, *args): return _soxt.SbPList_truncate(self, *args)
    def getArrayPtr(self, start = 0): return _soxt.SbPList_getArrayPtr(self, start)
    def __eq__(self, *args): return _soxt.SbPList___eq__(self, *args)
    def __ne__(self, *args): return _soxt.SbPList___ne__(self, *args)
    def get(self, *args): return _soxt.SbPList_get(self, *args)
    def set(self, *args): return _soxt.SbPList_set(self, *args)
    def __getitem__(self, *args): return _soxt.SbPList___getitem__(self, *args)
    def __setitem__(self, *args): return _soxt.SbPList___setitem__(self, *args)
    def __iter__(self):
       for i in range(self.getLength()):
          yield self[i]

SbPList_swigregister = _soxt.SbPList_swigregister
SbPList_swigregister(SbPList)

class SbIntList(SbPList):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soxt.new_SbIntList(*args)
        try: self.this.append(this)
        except: self.this = this
    def append(self, *args): return _soxt.SbIntList_append(self, *args)
    def find(self, *args): return _soxt.SbIntList_find(self, *args)
    def insert(self, *args): return _soxt.SbIntList_insert(self, *args)
    def __setitem__(self, *args): return _soxt.SbIntList___setitem__(self, *args)
    def __getitem__(self, *args): return _soxt.SbIntList___getitem__(self, *args)
    def get(self, *args): return _soxt.SbIntList_get(self, *args)
    __swig_destroy__ = _soxt.delete_SbIntList
    __del__ = lambda self : None;
SbIntList_swigregister = _soxt.SbIntList_swigregister
SbIntList_swigregister(SbIntList)

class SbString(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args): 
        this = _soxt.new_SbString(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SbString
    __del__ = lambda self : None;
    hash = staticmethod(_soxt.SbString_hash)
    def getLength(self): return _soxt.SbString_getLength(self)
    def makeEmpty(self, freeold = 1): return _soxt.SbString_makeEmpty(self, freeold)
    def getString(self): return _soxt.SbString_getString(self)
    def getSubString(self, *args): return _soxt.SbString_getSubString(self, *args)
    def deleteSubString(self, *args): return _soxt.SbString_deleteSubString(self, *args)
    def addIntString(self, *args): return _soxt.SbString_addIntString(self, *args)
    def __iadd__(self, *args): return _soxt.SbString___iadd__(self, *args)
    def compareSubString(self, *args): return _soxt.SbString_compareSubString(self, *args)
    def sprintf(self, *args): return _soxt.SbString_sprintf(self, *args)
    def apply(self, *args): return _soxt.SbString_apply(self, *args)
    def find(self, *args): return _soxt.SbString_find(self, *args)
    def findAll(self, *args): return _soxt.SbString_findAll(self, *args)
    def lower(self): return _soxt.SbString_lower(self)
    def upper(self): return _soxt.SbString_upper(self)
    def __eq__(self, *args): return _soxt.SbString___eq__(self, *args)
    def __nq__(self, *args): return _soxt.SbString___nq__(self, *args)
    def __getitem__(self, *args): return _soxt.SbString___getitem__(self, *args)
    def __iter__(self):
      return getString().__iter__()

    def __repr__(self, *args): return _soxt.SbString___repr__(self, *args)
SbString_swigregister = _soxt.SbString_swigregister
SbString_swigregister(SbString)

def SbString_hash(*args):
  return _soxt.SbString_hash(*args)
SbString_hash = _soxt.SbString_hash

class SbName(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args): 
        this = _soxt.new_SbName(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SbName
    __del__ = lambda self : None;
    def getString(self): return _soxt.SbName_getString(self)
    def getLength(self): return _soxt.SbName_getLength(self)
    isIdentStartChar = staticmethod(_soxt.SbName_isIdentStartChar)
    isIdentChar = staticmethod(_soxt.SbName_isIdentChar)
    isBaseNameStartChar = staticmethod(_soxt.SbName_isBaseNameStartChar)
    isBaseNameChar = staticmethod(_soxt.SbName_isBaseNameChar)
    empty = staticmethod(_soxt.SbName_empty)
    def __eq__(self, *args): return _soxt.SbName___eq__(self, *args)
    def __nq__(self, *args): return _soxt.SbName___nq__(self, *args)
    def __getitem__(self, *args): return _soxt.SbName___getitem__(self, *args)
    def __iter__(self):
      return getString().__iter__()

    def __repr__(self, *args): return _soxt.SbName___repr__(self, *args)
SbName_swigregister = _soxt.SbName_swigregister
SbName_swigregister(SbName)

def SbName_isIdentStartChar(*args):
  return _soxt.SbName_isIdentStartChar(*args)
SbName_isIdentStartChar = _soxt.SbName_isIdentStartChar

def SbName_isIdentChar(*args):
  return _soxt.SbName_isIdentChar(*args)
SbName_isIdentChar = _soxt.SbName_isIdentChar

def SbName_isBaseNameStartChar(*args):
  return _soxt.SbName_isBaseNameStartChar(*args)
SbName_isBaseNameStartChar = _soxt.SbName_isBaseNameStartChar

def SbName_isBaseNameChar(*args):
  return _soxt.SbName_isBaseNameChar(*args)
SbName_isBaseNameChar = _soxt.SbName_isBaseNameChar

def SbName_empty():
  return _soxt.SbName_empty()
SbName_empty = _soxt.SbName_empty

class SoError(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_SoError()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoError
    __del__ = lambda self : None;
    setHandlerCallback = staticmethod(_soxt.SoError_setHandlerCallback)
    getHandlerCallback = staticmethod(_soxt.SoError_getHandlerCallback)
    getHandlerData = staticmethod(_soxt.SoError_getHandlerData)
    def getDebugString(self): return _soxt.SoError_getDebugString(self)
    getClassTypeId = staticmethod(_soxt.SoError_getClassTypeId)
    def getTypeId(self): return _soxt.SoError_getTypeId(self)
    def isOfType(self, *args): return _soxt.SoError_isOfType(self, *args)
    post = staticmethod(_soxt.SoError_post)
    getString = staticmethod(_soxt.SoError_getString)
    initClass = staticmethod(_soxt.SoError_initClass)
    initClasses = staticmethod(_soxt.SoError_initClasses)
SoError_swigregister = _soxt.SoError_swigregister
SoError_swigregister(SoError)

def SoError_setHandlerCallback(*args):
  return _soxt.SoError_setHandlerCallback(*args)
SoError_setHandlerCallback = _soxt.SoError_setHandlerCallback

def SoError_getHandlerCallback():
  return _soxt.SoError_getHandlerCallback()
SoError_getHandlerCallback = _soxt.SoError_getHandlerCallback

def SoError_getHandlerData():
  return _soxt.SoError_getHandlerData()
SoError_getHandlerData = _soxt.SoError_getHandlerData

def SoError_getClassTypeId():
  return _soxt.SoError_getClassTypeId()
SoError_getClassTypeId = _soxt.SoError_getClassTypeId

def SoError_post(*args):
  return _soxt.SoError_post(*args)
SoError_post = _soxt.SoError_post

def SoError_getString(*args):
  return _soxt.SoError_getString(*args)
SoError_getString = _soxt.SoError_getString

def SoError_initClass():
  return _soxt.SoError_initClass()
SoError_initClass = _soxt.SoError_initClass

def SoError_initClasses():
  return _soxt.SoError_initClasses()
SoError_initClasses = _soxt.SoError_initClasses

class SoDebugError(SoError):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    ERROR = _soxt.SoDebugError_ERROR
    WARNING = _soxt.SoDebugError_WARNING
    INFO = _soxt.SoDebugError_INFO
    setHandlerCallback = staticmethod(_soxt.SoDebugError_setHandlerCallback)
    getHandlerCallback = staticmethod(_soxt.SoDebugError_getHandlerCallback)
    getHandlerData = staticmethod(_soxt.SoDebugError_getHandlerData)
    getClassTypeId = staticmethod(_soxt.SoDebugError_getClassTypeId)
    def getTypeId(self): return _soxt.SoDebugError_getTypeId(self)
    def getSeverity(self): return _soxt.SoDebugError_getSeverity(self)
    post = staticmethod(_soxt.SoDebugError_post)
    postWarning = staticmethod(_soxt.SoDebugError_postWarning)
    postInfo = staticmethod(_soxt.SoDebugError_postInfo)
    initClass = staticmethod(_soxt.SoDebugError_initClass)
    def __init__(self): 
        """__init__(self) -> SoDebugError"""
        this = _soxt.new_SoDebugError()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoDebugError
    __del__ = lambda self : None;
SoDebugError_swigregister = _soxt.SoDebugError_swigregister
SoDebugError_swigregister(SoDebugError)

def SoDebugError_setHandlerCallback(*args):
  return _soxt.SoDebugError_setHandlerCallback(*args)
SoDebugError_setHandlerCallback = _soxt.SoDebugError_setHandlerCallback

def SoDebugError_getHandlerCallback():
  return _soxt.SoDebugError_getHandlerCallback()
SoDebugError_getHandlerCallback = _soxt.SoDebugError_getHandlerCallback

def SoDebugError_getHandlerData():
  return _soxt.SoDebugError_getHandlerData()
SoDebugError_getHandlerData = _soxt.SoDebugError_getHandlerData

def SoDebugError_getClassTypeId():
  return _soxt.SoDebugError_getClassTypeId()
SoDebugError_getClassTypeId = _soxt.SoDebugError_getClassTypeId

def SoDebugError_post(*args):
  return _soxt.SoDebugError_post(*args)
SoDebugError_post = _soxt.SoDebugError_post

def SoDebugError_postWarning(*args):
  return _soxt.SoDebugError_postWarning(*args)
SoDebugError_postWarning = _soxt.SoDebugError_postWarning

def SoDebugError_postInfo(*args):
  return _soxt.SoDebugError_postInfo(*args)
SoDebugError_postInfo = _soxt.SoDebugError_postInfo

def SoDebugError_initClass():
  return _soxt.SoDebugError_initClass()
SoDebugError_initClass = _soxt.SoDebugError_initClass

class SbVec2s(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soxt.new_SbVec2s(*args)
        try: self.this.append(this)
        except: self.this = this
    def setValue(self, *args): return _soxt.SbVec2s_setValue(self, *args)
    def getValue(self): return _soxt.SbVec2s_getValue(self)
    def dot(self, *args): return _soxt.SbVec2s_dot(self, *args)
    def negate(self): return _soxt.SbVec2s_negate(self)
    def __imul__(self, *args): return _soxt.SbVec2s___imul__(self, *args)
    def __idiv__(self, *args): return _soxt.SbVec2s___idiv__(self, *args)
    def __iadd__(self, *args): return _soxt.SbVec2s___iadd__(self, *args)
    def __isub__(self, *args): return _soxt.SbVec2s___isub__(self, *args)
    def __neg__(self): return _soxt.SbVec2s___neg__(self)
    def output(self, *args): return _soxt.SbVec2s_output(self, *args)
    def __add__(self, *args): return _soxt.SbVec2s___add__(self, *args)
    def __sub__(self, *args): return _soxt.SbVec2s___sub__(self, *args)
    def __mul__(self, *args): return _soxt.SbVec2s___mul__(self, *args)
    def __rmul__(self, *args): return _soxt.SbVec2s___rmul__(self, *args)
    def __div__(self, *args): return _soxt.SbVec2s___div__(self, *args)
    def __eq__(self, *args): return _soxt.SbVec2s___eq__(self, *args)
    def __nq__(self, *args): return _soxt.SbVec2s___nq__(self, *args)
    def __getitem__(self, *args): return _soxt.SbVec2s___getitem__(self, *args)
    def __setitem__(self, *args): return _soxt.SbVec2s___setitem__(self, *args)
    def __iter__(self):
       for i in range(2):
          yield self[i]
       
    def __len__(self):
          return 2

    __swig_destroy__ = _soxt.delete_SbVec2s
    __del__ = lambda self : None;
SbVec2s_swigregister = _soxt.SbVec2s_swigregister
SbVec2s_swigregister(SbVec2s)

class SbTime(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soxt.new_SbTime(*args)
        try: self.this.append(this)
        except: self.this = this
    getTimeOfDay = staticmethod(_soxt.SbTime_getTimeOfDay)
    def setToTimeOfDay(self): return _soxt.SbTime_setToTimeOfDay(self)
    zero = staticmethod(_soxt.SbTime_zero)
    max = staticmethod(_soxt.SbTime_max)
    maxTime = staticmethod(_soxt.SbTime_maxTime)
    sleep = staticmethod(_soxt.SbTime_sleep)
    def setValue(self, *args): return _soxt.SbTime_setValue(self, *args)
    def setMsecValue(self, *args): return _soxt.SbTime_setMsecValue(self, *args)
    def getValue(self, *args): return _soxt.SbTime_getValue(self, *args)
    def getMsecValue(self): return _soxt.SbTime_getMsecValue(self)
    def format(self, fmt = "%S.%i"): return _soxt.SbTime_format(self, fmt)
    def formatDate(self, fmt = None): return _soxt.SbTime_formatDate(self, fmt)
    def parsedate(self, *args): return _soxt.SbTime_parsedate(self, *args)
    def __iadd__(self, *args): return _soxt.SbTime___iadd__(self, *args)
    def __isub__(self, *args): return _soxt.SbTime___isub__(self, *args)
    def __neg__(self): return _soxt.SbTime___neg__(self)
    def __imul__(self, *args): return _soxt.SbTime___imul__(self, *args)
    def __idiv__(self, *args): return _soxt.SbTime___idiv__(self, *args)
    def __mod__(self, *args): return _soxt.SbTime___mod__(self, *args)
    def __eq__(self, *args): return _soxt.SbTime___eq__(self, *args)
    def __ne__(self, *args): return _soxt.SbTime___ne__(self, *args)
    def __lt__(self, *args): return _soxt.SbTime___lt__(self, *args)
    def __gt__(self, *args): return _soxt.SbTime___gt__(self, *args)
    def __le__(self, *args): return _soxt.SbTime___le__(self, *args)
    def __ge__(self, *args): return _soxt.SbTime___ge__(self, *args)
    def output(self, *args): return _soxt.SbTime_output(self, *args)
    def __add__(self, *args): return _soxt.SbTime___add__(self, *args)
    def __sub__(self, *args): return _soxt.SbTime___sub__(self, *args)
    def __mul__(self, *args): return _soxt.SbTime___mul__(self, *args)
    def __rmul__(self, *args): return _soxt.SbTime___rmul__(self, *args)
    def __div__(self, *args): return _soxt.SbTime___div__(self, *args)
    __swig_destroy__ = _soxt.delete_SbTime
    __del__ = lambda self : None;
SbTime_swigregister = _soxt.SbTime_swigregister
SbTime_swigregister(SbTime)

def SbTime_getTimeOfDay():
  return _soxt.SbTime_getTimeOfDay()
SbTime_getTimeOfDay = _soxt.SbTime_getTimeOfDay

def SbTime_zero():
  return _soxt.SbTime_zero()
SbTime_zero = _soxt.SbTime_zero

def SbTime_max():
  return _soxt.SbTime_max()
SbTime_max = _soxt.SbTime_max

def SbTime_maxTime():
  return _soxt.SbTime_maxTime()
SbTime_maxTime = _soxt.SbTime_maxTime

def SbTime_sleep(*args):
  return _soxt.SbTime_sleep(*args)
SbTime_sleep = _soxt.SbTime_sleep

class SoEvent(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self): 
        this = _soxt.new_SoEvent()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoEvent
    __del__ = lambda self : None;
    def isOfType(self, *args): return _soxt.SoEvent_isOfType(self, *args)
    getClassTypeId = staticmethod(_soxt.SoEvent_getClassTypeId)
    def getTypeId(self): return _soxt.SoEvent_getTypeId(self)
    def setTime(self, *args): return _soxt.SoEvent_setTime(self, *args)
    def getTime(self): return _soxt.SoEvent_getTime(self)
    def setPosition(self, *args): return _soxt.SoEvent_setPosition(self, *args)
    def getPosition(self, *args): return _soxt.SoEvent_getPosition(self, *args)
    def getNormalizedPosition(self, *args): return _soxt.SoEvent_getNormalizedPosition(self, *args)
    def setShiftDown(self, *args): return _soxt.SoEvent_setShiftDown(self, *args)
    def wasShiftDown(self): return _soxt.SoEvent_wasShiftDown(self)
    def setCtrlDown(self, *args): return _soxt.SoEvent_setCtrlDown(self, *args)
    def wasCtrlDown(self): return _soxt.SoEvent_wasCtrlDown(self)
    def setAltDown(self, *args): return _soxt.SoEvent_setAltDown(self, *args)
    def wasAltDown(self): return _soxt.SoEvent_wasAltDown(self)
    initClass = staticmethod(_soxt.SoEvent_initClass)
SoEvent_swigregister = _soxt.SoEvent_swigregister
SoEvent_swigregister(SoEvent)

def SoEvent_getClassTypeId():
  return _soxt.SoEvent_getClassTypeId()
SoEvent_getClassTypeId = _soxt.SoEvent_getClassTypeId

def SoEvent_initClass():
  return _soxt.SoEvent_initClass()
SoEvent_initClass = _soxt.SoEvent_initClass

class SoNotRec(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    CONTAINER = _soxt.SoNotRec_CONTAINER
    PARENT = _soxt.SoNotRec_PARENT
    SENSOR = _soxt.SoNotRec_SENSOR
    FIELD = _soxt.SoNotRec_FIELD
    ENGINE = _soxt.SoNotRec_ENGINE
    def __init__(self, *args): 
        this = _soxt.new_SoNotRec(*args)
        try: self.this.append(this)
        except: self.this = this
    def setType(self, *args): return _soxt.SoNotRec_setType(self, *args)
    def getBase(self): return _soxt.SoNotRec_getBase(self)
    def getType(self): return _soxt.SoNotRec_getType(self)
    def getPrevious(self): return _soxt.SoNotRec_getPrevious(self)
    def setPrevious(self, *args): return _soxt.SoNotRec_setPrevious(self, *args)
    def output(self, *args): return _soxt.SoNotRec_output(self, *args)
    __swig_destroy__ = _soxt.delete_SoNotRec
    __del__ = lambda self : None;
SoNotRec_swigregister = _soxt.SoNotRec_swigregister
SoNotRec_swigregister(SoNotRec)

class SoNotList(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _soxt.new_SoNotList(*args)
        try: self.this.append(this)
        except: self.this = this
    def append(self, *args): return _soxt.SoNotList_append(self, *args)
    def setLastType(self, *args): return _soxt.SoNotList_setLastType(self, *args)
    def getFirstRec(self): return _soxt.SoNotList_getFirstRec(self)
    def getLastRec(self): return _soxt.SoNotList_getLastRec(self)
    def getFirstRecAtNode(self): return _soxt.SoNotList_getFirstRecAtNode(self)
    def getLastField(self): return _soxt.SoNotList_getLastField(self)
    def getLastEngineOutput(self): return _soxt.SoNotList_getLastEngineOutput(self)
    def getTimeStamp(self): return _soxt.SoNotList_getTimeStamp(self)
    def output(self, *args): return _soxt.SoNotList_output(self, *args)
    __swig_destroy__ = _soxt.delete_SoNotList
    __del__ = lambda self : None;
SoNotList_swigregister = _soxt.SoNotList_swigregister
SoNotList_swigregister(SoNotList)

class SoField(object):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _soxt.delete_SoField
    __del__ = lambda self : None;
    initClass = staticmethod(_soxt.SoField_initClass)
    initClasses = staticmethod(_soxt.SoField_initClasses)
    cleanupClass = staticmethod(_soxt.SoField_cleanupClass)
    def setIgnored(self, *args): return _soxt.SoField_setIgnored(self, *args)
    def isIgnored(self): return _soxt.SoField_isIgnored(self)
    def setDefault(self, *args): return _soxt.SoField_setDefault(self, *args)
    def isDefault(self): return _soxt.SoField_isDefault(self)
    def getTypeId(self): return _soxt.SoField_getTypeId(self)
    getClassTypeId = staticmethod(_soxt.SoField_getClassTypeId)
    def isOfType(self, *args): return _soxt.SoField_isOfType(self, *args)
    def enableConnection(self, *args): return _soxt.SoField_enableConnection(self, *args)
    def isConnectionEnabled(self): return _soxt.SoField_isConnectionEnabled(self)
    def isConnectedFromEngine(self): return _soxt.SoField_isConnectedFromEngine(self)
    def getConnectedEngine(self, *args): return _soxt.SoField_getConnectedEngine(self, *args)
    def connectFrom(self, *args): return _soxt.SoField_connectFrom(self, *args)
    def appendConnection(self, *args): return _soxt.SoField_appendConnection(self, *args)
    def isConnectedFromField(self): return _soxt.SoField_isConnectedFromField(self)
    def getConnectedField(self, *args): return _soxt.SoField_getConnectedField(self, *args)
    def getNumConnections(self): return _soxt.SoField_getNumConnections(self)
    def getForwardConnections(self, *args): return _soxt.SoField_getForwardConnections(self, *args)
    def getConnections(self, *args): return _soxt.SoField_getConnections(self, *args)
    def disconnect(self, *args): return _soxt.SoField_disconnect(self, *args)
    def isConnected(self): return _soxt.SoField_isConnected(self)
    def setContainer(self, *args): return _soxt.SoField_setContainer(self, *args)
    def getContainer(self): return _soxt.SoField_getContainer(self)
    def set(self, *args): return _soxt.SoField_set(self, *args)
    def shouldWrite(self): return _soxt.SoField_shouldWrite(self)
    def touch(self): return _soxt.SoField_touch(self)
    def startNotify(self): return _soxt.SoField_startNotify(self)
    def notify(self, *args): return _soxt.SoField_notify(self, *args)
    def enableNotify(self, *args): return _soxt.SoField_enableNotify(self, *args)
    def isNotifyEnabled(self): return _soxt.SoField_isNotifyEnabled(self)
    def addAuditor(self, *args): return _soxt.SoField_addAuditor(self, *args)
    def removeAuditor(self, *args): return _soxt.SoField_removeAuditor(self, *args)
    def __eq__(self, *args): return _soxt.SoField___eq__(self, *args)
    def __ne__(self, *args): return _soxt.SoField___ne__(self, *args)
    def connectionStatusChanged(self, *args): return _soxt.SoField_connectionStatusChanged(self, *args)
    def isReadOnly(self): return _soxt.SoField_isReadOnly(self)
    def isSame(self, *args): return _soxt.SoField_isSame(self, *args)
    def copyFrom(self, *args): return _soxt.SoField_copyFrom(self, *args)
    def fixCopy(self, *args): return _soxt.SoField_fixCopy(self, *args)
    def referencesCopy(self): return _soxt.SoField_referencesCopy(self)
    def copyConnection(self, *args): return _soxt.SoField_copyConnection(self, *args)
    def read(self, *args): return _soxt.SoField_read(self, *args)
    def write(self, *args): return _soxt.SoField_write(self, *args)
    def countWriteRefs(self, *args): return _soxt.SoField_countWriteRefs(self, *args)
    NORMAL_FIELD = _soxt.SoField_NORMAL_FIELD
    EVENTIN_FIELD = _soxt.SoField_EVENTIN_FIELD
    EVENTOUT_FIELD = _soxt.SoField_EVENTOUT_FIELD
    EXPOSED_FIELD = _soxt.SoField_EXPOSED_FIELD
    def setFieldType(self, *args): return _soxt.SoField_setFieldType(self, *args)
    def getFieldType(self): return _soxt.SoField_getFieldType(self)
    def getDirty(self): return _soxt.SoField_getDirty(self)
    def setDirty(self, *args): return _soxt.SoField_setDirty(self, *args)
    def evaluate(self): return _soxt.SoField_evaluate(self)
    def get(self): return _soxt.SoField_get(self)
SoField_swigregister = _soxt.SoField_swigregister
SoField_swigregister(SoField)

def SoField_initClass():
  return _soxt.SoField_initClass()
SoField_initClass = _soxt.SoField_initClass

def SoField_initClasses():
  return _soxt.SoField_initClasses()
SoField_initClasses = _soxt.SoField_initClasses

def SoField_cleanupClass():
  return _soxt.SoField_cleanupClass()
SoField_cleanupClass = _soxt.SoField_cleanupClass

def SoField_getClassTypeId():
  return _soxt.SoField_getClassTypeId()
SoField_getClassTypeId = _soxt.SoField_getClassTypeId

class SoSField(SoField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _soxt.delete_SoSField
    __del__ = lambda self : None;
    initClass = staticmethod(_soxt.SoSField_initClass)
    getClassTypeId = staticmethod(_soxt.SoSField_getClassTypeId)
    atexit_cleanup = staticmethod(_soxt.SoSField_atexit_cleanup)
SoSField_swigregister = _soxt.SoSField_swigregister
SoSField_swigregister(SoSField)

def SoSField_initClass():
  return _soxt.SoSField_initClass()
SoSField_initClass = _soxt.SoSField_initClass

def SoSField_getClassTypeId():
  return _soxt.SoSField_getClassTypeId()
SoSField_getClassTypeId = _soxt.SoSField_getClassTypeId

def SoSField_atexit_cleanup():
  return _soxt.SoSField_atexit_cleanup()
SoSField_atexit_cleanup = _soxt.SoSField_atexit_cleanup

class SoMField(SoField):
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    __swig_destroy__ = _soxt.delete_SoMField
    __del__ = lambda self : None;
    getClassTypeId = staticmethod(_soxt.SoMField_getClassTypeId)
    atexit_cleanup = staticmethod(_soxt.SoMField_atexit_cleanup)
    def getNum(self): return _soxt.SoMField_getNum(self)
    def setNum(self, *args): return _soxt.SoMField_setNum(self, *args)
    def deleteValues(self, *args): return _soxt.SoMField_deleteValues(self, *args)
    def insertSpace(self, *args): return _soxt.SoMField_insertSpace(self, *args)
    def set1(self, *args): return _soxt.SoMField_set1(self, *args)
    initClass = staticmethod(_soxt.SoMField_initClass)
    def enableDeleteValues(self): return _soxt.SoMField_enableDeleteValues(self)
    def isDeleteValuesEnabled(self): return _soxt.SoMField_isDeleteValuesEnabled(self)
    def __iter__(self):
       i = 0
       while i < self.getNum():
          yield self[i]
          i += 1

    def __len__(self, *args): return _soxt.SoMField___len__(self, *args)
    def get1(self, *args): return _soxt.SoMField_get1(self, *args)
SoMField_swigregister = _soxt.SoMField_swigregister
SoMField_swigregister(SoMField)

def SoMField_getClassTypeId():
  return _soxt.SoMField_getClassTypeId()
SoMField_getClassTypeId = _soxt.SoMField_getClassTypeId

def SoMField_atexit_cleanup():
  return _soxt.SoMField_atexit_cleanup()
SoMField_atexit_cleanup = _soxt.SoMField_atexit_cleanup

def SoMField_initClass():
  return _soxt.SoMField_initClass()
SoMField_initClass = _soxt.SoMField_initClass

import pivy.coin
SOXT_MAJOR_VERSION = _soxt.SOXT_MAJOR_VERSION
SOXT_MINOR_VERSION = _soxt.SOXT_MINOR_VERSION
SOXT_MICRO_VERSION = _soxt.SOXT_MICRO_VERSION
SOXT_VERSION = _soxt.SOXT_VERSION
class SoXtObject(object):
    """Proxy of C++ SoXtObject class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtObject_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtObject_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtObject_getTypeId(self)

    def isOfType(self, *args):
        """isOfType(self, SoType type) -> SbBool"""
        return _soxt.SoXtObject_isOfType(self, *args)

    def init():
        """init()"""
        return _soxt.SoXtObject_init()

    init = staticmethod(init)
    __swig_destroy__ = _soxt.delete_SoXtObject
    __del__ = lambda self : None;
SoXtObject_swigregister = _soxt.SoXtObject_swigregister
SoXtObject_swigregister(SoXtObject)

def SoXtObject_initClass():
  """SoXtObject_initClass()"""
  return _soxt.SoXtObject_initClass()

def SoXtObject_getClassTypeId():
  """SoXtObject_getClassTypeId() -> SoType"""
  return _soxt.SoXtObject_getClassTypeId()

def SoXtObject_init():
  """SoXtObject_init()"""
  return _soxt.SoXtObject_init()

SOXT_SUN_CC_4_0_SOTYPE_INIT_BUG = _soxt.SOXT_SUN_CC_4_0_SOTYPE_INIT_BUG
class SoXtDevice(SoXtObject):
    """Proxy of C++ SoXtDevice class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtDevice_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtDevice_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtDevice_getTypeId(self)

    __swig_destroy__ = _soxt.delete_SoXtDevice
    __del__ = lambda self : None;
    def enable(self, *args):
        """enable(self, Widget w, SoXtEventHandler handler, void closure)"""
        return _soxt.SoXtDevice_enable(self, *args)

    def disable(self, *args):
        """disable(self, Widget w, SoXtEventHandler handler, void closure)"""
        return _soxt.SoXtDevice_disable(self, *args)

    def translateEvent(self, *args):
        """translateEvent(self, XAnyEvent event) -> SoEvent"""
        return _soxt.SoXtDevice_translateEvent(self, *args)

    def setWindowSize(self, *args):
        """setWindowSize(self, SbVec2s size)"""
        return _soxt.SoXtDevice_setWindowSize(self, *args)

    def getWindowSize(self):
        """getWindowSize(self) -> SbVec2s"""
        return _soxt.SoXtDevice_getWindowSize(self)

    def initClasses():
        """initClasses()"""
        return _soxt.SoXtDevice_initClasses()

    initClasses = staticmethod(initClasses)
SoXtDevice_swigregister = _soxt.SoXtDevice_swigregister
SoXtDevice_swigregister(SoXtDevice)

def SoXtDevice_initClass():
  """SoXtDevice_initClass()"""
  return _soxt.SoXtDevice_initClass()

def SoXtDevice_getClassTypeId():
  """SoXtDevice_getClassTypeId() -> SoType"""
  return _soxt.SoXtDevice_getClassTypeId()

def SoXtDevice_initClasses():
  """SoXtDevice_initClasses()"""
  return _soxt.SoXtDevice_initClasses()

class SoXtLinuxJoystick(SoXtDevice):
    """Proxy of C++ SoXtLinuxJoystick class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtLinuxJoystick_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtLinuxJoystick_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtLinuxJoystick_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtLinuxJoystick_createInstance()

    createInstance = staticmethod(createInstance)
    ALL_EVENTS = _soxt.SoXtLinuxJoystick_ALL_EVENTS
    __swig_destroy__ = _soxt.delete_SoXtLinuxJoystick
    __del__ = lambda self : None;
    def enable(self, *args):
        """enable(self, Widget widget, SoXtEventHandler handler, XtPointer closure)"""
        return _soxt.SoXtLinuxJoystick_enable(self, *args)

    def disable(self, *args):
        """disable(self, Widget widget, SoXtEventHandler handler, XtPointer closure)"""
        return _soxt.SoXtLinuxJoystick_disable(self, *args)

    def translateEvent(self, *args):
        """translateEvent(self, XAnyEvent xevent) -> SoEvent"""
        return _soxt.SoXtLinuxJoystick_translateEvent(self, *args)

    def setRotationScaleFactor(self, *args):
        """setRotationScaleFactor(self, float factor)"""
        return _soxt.SoXtLinuxJoystick_setRotationScaleFactor(self, *args)

    def getRotationScaleFactor(self):
        """getRotationScaleFactor(self) -> float"""
        return _soxt.SoXtLinuxJoystick_getRotationScaleFactor(self)

    def setTranslationScaleFactor(self, *args):
        """setTranslationScaleFactor(self, float factor)"""
        return _soxt.SoXtLinuxJoystick_setTranslationScaleFactor(self, *args)

    def getTranslationScaleFactor(self):
        """getTranslationScaleFactor(self) -> float"""
        return _soxt.SoXtLinuxJoystick_getTranslationScaleFactor(self)

    def exists():
        """exists() -> SbBool"""
        return _soxt.SoXtLinuxJoystick_exists()

    exists = staticmethod(exists)
    def setFocusToWindow(self, *args):
        """setFocusToWindow(self, SbBool enable)"""
        return _soxt.SoXtLinuxJoystick_setFocusToWindow(self, *args)

    def isFocusToWindow(self):
        """isFocusToWindow(self) -> SbBool"""
        return _soxt.SoXtLinuxJoystick_isFocusToWindow(self)

    def getNumButtons(self):
        """getNumButtons(self) -> int"""
        return _soxt.SoXtLinuxJoystick_getNumButtons(self)

    def getButtonValue(self, *args):
        """getButtonValue(self, int button) -> SbBool"""
        return _soxt.SoXtLinuxJoystick_getButtonValue(self, *args)

    def getNumAxes(self):
        """getNumAxes(self) -> int"""
        return _soxt.SoXtLinuxJoystick_getNumAxes(self)

    def getAxisValue(self, *args):
        """getAxisValue(self, int axis) -> float"""
        return _soxt.SoXtLinuxJoystick_getAxisValue(self, *args)

SoXtLinuxJoystick_swigregister = _soxt.SoXtLinuxJoystick_swigregister
SoXtLinuxJoystick_swigregister(SoXtLinuxJoystick)

def SoXtLinuxJoystick_initClass():
  """SoXtLinuxJoystick_initClass()"""
  return _soxt.SoXtLinuxJoystick_initClass()

def SoXtLinuxJoystick_getClassTypeId():
  """SoXtLinuxJoystick_getClassTypeId() -> SoType"""
  return _soxt.SoXtLinuxJoystick_getClassTypeId()

def SoXtLinuxJoystick_createInstance():
  """SoXtLinuxJoystick_createInstance() -> void"""
  return _soxt.SoXtLinuxJoystick_createInstance()

def SoXtLinuxJoystick_exists():
  """SoXtLinuxJoystick_exists() -> SbBool"""
  return _soxt.SoXtLinuxJoystick_exists()

class SoXtKeyboard(SoXtDevice):
    """Proxy of C++ SoXtKeyboard class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtKeyboard_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtKeyboard_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtKeyboard_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtKeyboard_createInstance()

    createInstance = staticmethod(createInstance)
    KEY_PRESS = _soxt.SoXtKeyboard_KEY_PRESS
    KEY_RELEASE = _soxt.SoXtKeyboard_KEY_RELEASE
    ALL_EVENTS = _soxt.SoXtKeyboard_ALL_EVENTS
    def __init__(self, *args): 
        """
        __init__(self, int eventmask = ALL_EVENTS) -> SoXtKeyboard
        __init__(self) -> SoXtKeyboard
        """
        this = _soxt.new_SoXtKeyboard(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtKeyboard
    __del__ = lambda self : None;
    def enable(self, *args):
        """enable(self, Widget widget, SoXtEventHandler handler, void closure)"""
        return _soxt.SoXtKeyboard_enable(self, *args)

    def disable(self, *args):
        """disable(self, Widget widget, SoXtEventHandler handler, void closure)"""
        return _soxt.SoXtKeyboard_disable(self, *args)

    def translateEvent(self, *args):
        """translateEvent(self, XAnyEvent event) -> SoEvent"""
        return _soxt.SoXtKeyboard_translateEvent(self, *args)

SoXtKeyboard_swigregister = _soxt.SoXtKeyboard_swigregister
SoXtKeyboard_swigregister(SoXtKeyboard)

def SoXtKeyboard_initClass():
  """SoXtKeyboard_initClass()"""
  return _soxt.SoXtKeyboard_initClass()

def SoXtKeyboard_getClassTypeId():
  """SoXtKeyboard_getClassTypeId() -> SoType"""
  return _soxt.SoXtKeyboard_getClassTypeId()

def SoXtKeyboard_createInstance():
  """SoXtKeyboard_createInstance() -> void"""
  return _soxt.SoXtKeyboard_createInstance()

class SoXtMouse(SoXtDevice):
    """Proxy of C++ SoXtMouse class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtMouse_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtMouse_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtMouse_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtMouse_createInstance()

    createInstance = staticmethod(createInstance)
    BUTTON_PRESS = _soxt.SoXtMouse_BUTTON_PRESS
    BUTTON_RELEASE = _soxt.SoXtMouse_BUTTON_RELEASE
    POINTER_MOTION = _soxt.SoXtMouse_POINTER_MOTION
    BUTTON_MOTION = _soxt.SoXtMouse_BUTTON_MOTION
    ALL_EVENTS = _soxt.SoXtMouse_ALL_EVENTS
    def __init__(self, *args): 
        """
        __init__(self, int eventmask = ALL_EVENTS) -> SoXtMouse
        __init__(self) -> SoXtMouse
        """
        this = _soxt.new_SoXtMouse(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtMouse
    __del__ = lambda self : None;
    def enable(self, *args):
        """enable(self, Widget widget, SoXtEventHandler handler, void closure)"""
        return _soxt.SoXtMouse_enable(self, *args)

    def disable(self, *args):
        """disable(self, Widget widget, SoXtEventHandler handler, void closure)"""
        return _soxt.SoXtMouse_disable(self, *args)

    def translateEvent(self, *args):
        """translateEvent(self, XAnyEvent event) -> SoEvent"""
        return _soxt.SoXtMouse_translateEvent(self, *args)

SoXtMouse_swigregister = _soxt.SoXtMouse_swigregister
SoXtMouse_swigregister(SoXtMouse)

def SoXtMouse_initClass():
  """SoXtMouse_initClass()"""
  return _soxt.SoXtMouse_initClass()

def SoXtMouse_getClassTypeId():
  """SoXtMouse_getClassTypeId() -> SoType"""
  return _soxt.SoXtMouse_getClassTypeId()

def SoXtMouse_createInstance():
  """SoXtMouse_createInstance() -> void"""
  return _soxt.SoXtMouse_createInstance()

class SoGuiColorEditor(pivy.coin.SoBaseKit):
    """Proxy of C++ SoGuiColorEditor class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoGuiColorEditor_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoGuiColorEditor_getTypeId(self)

    def getClassNodekitCatalog():
        """getClassNodekitCatalog() -> SoNodekitCatalog"""
        return _soxt.SoGuiColorEditor_getClassNodekitCatalog()

    getClassNodekitCatalog = staticmethod(getClassNodekitCatalog)
    def getNodekitCatalog(self):
        """getNodekitCatalog(self) -> SoNodekitCatalog"""
        return _soxt.SoGuiColorEditor_getNodekitCatalog(self)

    def initClass():
        """initClass()"""
        return _soxt.SoGuiColorEditor_initClass()

    initClass = staticmethod(initClass)
    def __init__(self): 
        """__init__(self) -> SoGuiColorEditor"""
        this = _soxt.new_SoGuiColorEditor()
        try: self.this.append(this)
        except: self.this = this
    NONE = _soxt.SoGuiColorEditor_NONE
    INTENSITY = _soxt.SoGuiColorEditor_INTENSITY
    RGB = _soxt.SoGuiColorEditor_RGB
    HSV = _soxt.SoGuiColorEditor_HSV
    RGB_V = _soxt.SoGuiColorEditor_RGB_V
    RGB_HSV = _soxt.SoGuiColorEditor_RGB_HSV
    CONTINUOUS = _soxt.SoGuiColorEditor_CONTINUOUS
    AFTER_ACCEPT = _soxt.SoGuiColorEditor_AFTER_ACCEPT
    sliders = _swig_property(_soxt.SoGuiColorEditor_sliders_get, _soxt.SoGuiColorEditor_sliders_set)
    update = _swig_property(_soxt.SoGuiColorEditor_update_get, _soxt.SoGuiColorEditor_update_set)
    wysiwyg = _swig_property(_soxt.SoGuiColorEditor_wysiwyg_get, _soxt.SoGuiColorEditor_wysiwyg_set)
    color = _swig_property(_soxt.SoGuiColorEditor_color_get, _soxt.SoGuiColorEditor_color_set)
SoGuiColorEditor_swigregister = _soxt.SoGuiColorEditor_swigregister
SoGuiColorEditor_swigregister(SoGuiColorEditor)

def SoGuiColorEditor_getClassTypeId():
  """SoGuiColorEditor_getClassTypeId() -> SoType"""
  return _soxt.SoGuiColorEditor_getClassTypeId()

def SoGuiColorEditor_getClassNodekitCatalog():
  """SoGuiColorEditor_getClassNodekitCatalog() -> SoNodekitCatalog"""
  return _soxt.SoGuiColorEditor_getClassNodekitCatalog()

def SoGuiColorEditor_initClass():
  """SoGuiColorEditor_initClass()"""
  return _soxt.SoGuiColorEditor_initClass()

class SoXtComponent(SoXtObject):
    """Proxy of C++ SoXtComponent class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtComponent_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtComponent_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtComponent_getTypeId(self)

    __swig_destroy__ = _soxt.delete_SoXtComponent
    __del__ = lambda self : None;
    def show(self):
        """show(self)"""
        return _soxt.SoXtComponent_show(self)

    def hide(self):
        """hide(self)"""
        return _soxt.SoXtComponent_hide(self)

    def setComponentCursor(self, *args):
        """setComponentCursor(self, SoXtCursor cursor)"""
        return _soxt.SoXtComponent_setComponentCursor(self, *args)

    def setWidgetCursor(*args):
        """setWidgetCursor(Widget w, SoXtCursor cursor)"""
        return _soxt.SoXtComponent_setWidgetCursor(*args)

    setWidgetCursor = staticmethod(setWidgetCursor)
    def isFullScreen(self):
        """isFullScreen(self) -> SbBool"""
        return _soxt.SoXtComponent_isFullScreen(self)

    def setFullScreen(self, *args):
        """setFullScreen(self, SbBool onoff) -> SbBool"""
        return _soxt.SoXtComponent_setFullScreen(self, *args)

    def isVisible(self):
        """isVisible(self) -> SbBool"""
        return _soxt.SoXtComponent_isVisible(self)

    def isTopLevelShell(self):
        """isTopLevelShell(self) -> SbBool"""
        return _soxt.SoXtComponent_isTopLevelShell(self)

    def getWidget(self):
        """getWidget(self) -> Widget"""
        return _soxt.SoXtComponent_getWidget(self)

    def getBaseWidget(self):
        """getBaseWidget(self) -> Widget"""
        return _soxt.SoXtComponent_getBaseWidget(self)

    def getShellWidget(self):
        """getShellWidget(self) -> Widget"""
        return _soxt.SoXtComponent_getShellWidget(self)

    def getParentWidget(self):
        """getParentWidget(self) -> Widget"""
        return _soxt.SoXtComponent_getParentWidget(self)

    def setSize(self, *args):
        """setSize(self, SbVec2s size)"""
        return _soxt.SoXtComponent_setSize(self, *args)

    def getSize(self):
        """getSize(self) -> SbVec2s"""
        return _soxt.SoXtComponent_getSize(self)

    def setTitle(self, *args):
        """setTitle(self, char title)"""
        return _soxt.SoXtComponent_setTitle(self, *args)

    def getTitle(self):
        """getTitle(self) -> char"""
        return _soxt.SoXtComponent_getTitle(self)

    def setIconTitle(self, *args):
        """setIconTitle(self, char title)"""
        return _soxt.SoXtComponent_setIconTitle(self, *args)

    def getIconTitle(self):
        """getIconTitle(self) -> char"""
        return _soxt.SoXtComponent_getIconTitle(self)

    def getWidgetName(self):
        """getWidgetName(self) -> char"""
        return _soxt.SoXtComponent_getWidgetName(self)

    def getClassName(self):
        """getClassName(self) -> char"""
        return _soxt.SoXtComponent_getClassName(self)

    def setWindowCloseCallback(self, *args):
        """
        setWindowCloseCallback(self, SoXtComponentCB func, void user = None)
        setWindowCloseCallback(self, SoXtComponentCB func)
        """
        return _soxt.SoXtComponent_setWindowCloseCallback(self, *args)

    def getComponent(*args):
        """getComponent(Widget widget) -> SoXtComponent"""
        return _soxt.SoXtComponent_getComponent(*args)

    getComponent = staticmethod(getComponent)
    def initClasses():
        """initClasses()"""
        return _soxt.SoXtComponent_initClasses()

    initClasses = staticmethod(initClasses)
    def getDisplay(self):
        """getDisplay(self) -> Display"""
        return _soxt.SoXtComponent_getDisplay(self)

    def fitSize(self, *args):
        """fitSize(self, SbVec2s size)"""
        return _soxt.SoXtComponent_fitSize(self, *args)

    def addWindowCloseCallback(self, *args):
        """
        addWindowCloseCallback(self, SoXtComponentCB callback, void closure = None)
        addWindowCloseCallback(self, SoXtComponentCB callback)
        """
        return _soxt.SoXtComponent_addWindowCloseCallback(self, *args)

    def removeWindowCloseCallback(self, *args):
        """
        removeWindowCloseCallback(self, SoXtComponentCB callback, void closure = None)
        removeWindowCloseCallback(self, SoXtComponentCB callback)
        """
        return _soxt.SoXtComponent_removeWindowCloseCallback(self, *args)

SoXtComponent_swigregister = _soxt.SoXtComponent_swigregister
SoXtComponent_swigregister(SoXtComponent)

def SoXtComponent_initClass():
  """SoXtComponent_initClass()"""
  return _soxt.SoXtComponent_initClass()

def SoXtComponent_getClassTypeId():
  """SoXtComponent_getClassTypeId() -> SoType"""
  return _soxt.SoXtComponent_getClassTypeId()

def SoXtComponent_setWidgetCursor(*args):
  """SoXtComponent_setWidgetCursor(Widget w, SoXtCursor cursor)"""
  return _soxt.SoXtComponent_setWidgetCursor(*args)

def SoXtComponent_getComponent(*args):
  """SoXtComponent_getComponent(Widget widget) -> SoXtComponent"""
  return _soxt.SoXtComponent_getComponent(*args)

def SoXtComponent_initClasses():
  """SoXtComponent_initClasses()"""
  return _soxt.SoXtComponent_initClasses()

SO_GL_RGB = _soxt.SO_GL_RGB
SO_GLX_RGB = _soxt.SO_GLX_RGB
SO_GL_DOUBLE = _soxt.SO_GL_DOUBLE
SO_GLX_DOUBLE = _soxt.SO_GLX_DOUBLE
SO_GL_ZBUFFER = _soxt.SO_GL_ZBUFFER
SO_GLX_ZBUFFER = _soxt.SO_GLX_ZBUFFER
SO_GL_OVERLAY = _soxt.SO_GL_OVERLAY
SO_GLX_OVERLAY = _soxt.SO_GLX_OVERLAY
SO_GL_STEREO = _soxt.SO_GL_STEREO
SO_GLX_STEREO = _soxt.SO_GLX_STEREO
class SoXtGLWidget(SoXtComponent):
    """Proxy of C++ SoXtGLWidget class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtGLWidget_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtGLWidget_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtGLWidget_getTypeId(self)

    def setBorder(self, *args):
        """setBorder(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setBorder(self, *args)

    def isBorder(self):
        """isBorder(self) -> SbBool"""
        return _soxt.SoXtGLWidget_isBorder(self)

    def setDoubleBuffer(self, *args):
        """setDoubleBuffer(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setDoubleBuffer(self, *args)

    def isDoubleBuffer(self):
        """isDoubleBuffer(self) -> SbBool"""
        return _soxt.SoXtGLWidget_isDoubleBuffer(self)

    def setDrawToFrontBufferEnable(self, *args):
        """setDrawToFrontBufferEnable(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setDrawToFrontBufferEnable(self, *args)

    def isDrawToFrontBufferEnable(self):
        """isDrawToFrontBufferEnable(self) -> SbBool"""
        return _soxt.SoXtGLWidget_isDrawToFrontBufferEnable(self)

    def setQuadBufferStereo(self, *args):
        """setQuadBufferStereo(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setQuadBufferStereo(self, *args)

    def isQuadBufferStereo(self):
        """isQuadBufferStereo(self) -> SbBool"""
        return _soxt.SoXtGLWidget_isQuadBufferStereo(self)

    def setAccumulationBuffer(self, *args):
        """setAccumulationBuffer(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setAccumulationBuffer(self, *args)

    def getAccumulationBuffer(self):
        """getAccumulationBuffer(self) -> SbBool"""
        return _soxt.SoXtGLWidget_getAccumulationBuffer(self)

    def setStencilBuffer(self, *args):
        """setStencilBuffer(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setStencilBuffer(self, *args)

    def getStencilBuffer(self):
        """getStencilBuffer(self) -> SbBool"""
        return _soxt.SoXtGLWidget_getStencilBuffer(self)

    def setAlphaChannel(self, *args):
        """setAlphaChannel(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setAlphaChannel(self, *args)

    def getAlphaChannel(self):
        """getAlphaChannel(self) -> SbBool"""
        return _soxt.SoXtGLWidget_getAlphaChannel(self)

    def setOverlayRender(self, *args):
        """setOverlayRender(self, SbBool onoff)"""
        return _soxt.SoXtGLWidget_setOverlayRender(self, *args)

    def isOverlayRender(self):
        """isOverlayRender(self) -> SbBool"""
        return _soxt.SoXtGLWidget_isOverlayRender(self)

    def setSampleBuffers(self, *args):
        """setSampleBuffers(self, int numsamples)"""
        return _soxt.SoXtGLWidget_setSampleBuffers(self, *args)

    def getSampleBuffers(self):
        """getSampleBuffers(self) -> int"""
        return _soxt.SoXtGLWidget_getSampleBuffers(self)

    def setStealFocus(self, *args):
        """setStealFocus(self, SbBool enable)"""
        return _soxt.SoXtGLWidget_setStealFocus(self, *args)

    def isStealFocus(self):
        """isStealFocus(self) -> SbBool"""
        return _soxt.SoXtGLWidget_isStealFocus(self)

    def getGLWidget(self):
        """getGLWidget(self) -> Widget"""
        return _soxt.SoXtGLWidget_getGLWidget(self)

    def getNormalWidget(self):
        """getNormalWidget(self) -> Widget"""
        return _soxt.SoXtGLWidget_getNormalWidget(self)

    def getOverlayWidget(self):
        """getOverlayWidget(self) -> Widget"""
        return _soxt.SoXtGLWidget_getOverlayWidget(self)

    def hasOverlayGLArea(self):
        """hasOverlayGLArea(self) -> SbBool"""
        return _soxt.SoXtGLWidget_hasOverlayGLArea(self)

    def hasNormalGLArea(self):
        """hasNormalGLArea(self) -> SbBool"""
        return _soxt.SoXtGLWidget_hasNormalGLArea(self)

    def getOverlayTransparentPixel(self):
        """getOverlayTransparentPixel(self) -> unsigned long"""
        return _soxt.SoXtGLWidget_getOverlayTransparentPixel(self)

    def getPointSizeLimits(self, *args):
        """getPointSizeLimits(self, SbVec2f range, float granularity)"""
        return _soxt.SoXtGLWidget_getPointSizeLimits(self, *args)

    def getLineWidthLimits(self, *args):
        """getLineWidthLimits(self, SbVec2f range, float granularity)"""
        return _soxt.SoXtGLWidget_getLineWidthLimits(self, *args)

    def getNormalContext(self):
        """getNormalContext(self) -> GLXContext"""
        return _soxt.SoXtGLWidget_getNormalContext(self)

    def getOverlayContext(self):
        """getOverlayContext(self) -> GLXContext"""
        return _soxt.SoXtGLWidget_getOverlayContext(self)

    def getNormalWindow(self):
        """getNormalWindow(self) -> Window"""
        return _soxt.SoXtGLWidget_getNormalWindow(self)

    def getOverlayWindow(self):
        """getOverlayWindow(self) -> Window"""
        return _soxt.SoXtGLWidget_getOverlayWindow(self)

    def getOverlayColorMapSize(self):
        """getOverlayColorMapSize(self) -> int"""
        return _soxt.SoXtGLWidget_getOverlayColorMapSize(self)

    def getColorMapSize(self):
        """getColorMapSize(self) -> int"""
        return _soxt.SoXtGLWidget_getColorMapSize(self)

    def setNormalVisual(self, *args):
        """setNormalVisual(self, XVisualInfo visual)"""
        return _soxt.SoXtGLWidget_setNormalVisual(self, *args)

    def getNormalVisual(self):
        """getNormalVisual(self) -> XVisualInfo"""
        return _soxt.SoXtGLWidget_getNormalVisual(self)

    def setOverlayVisual(self, *args):
        """setOverlayVisual(self, XVisualInfo visual)"""
        return _soxt.SoXtGLWidget_setOverlayVisual(self, *args)

    def getOverlayVisual(self):
        """getOverlayVisual(self) -> XVisualInfo"""
        return _soxt.SoXtGLWidget_getOverlayVisual(self)

SoXtGLWidget_swigregister = _soxt.SoXtGLWidget_swigregister
SoXtGLWidget_swigregister(SoXtGLWidget)

def SoXtGLWidget_initClass():
  """SoXtGLWidget_initClass()"""
  return _soxt.SoXtGLWidget_initClass()

def SoXtGLWidget_getClassTypeId():
  """SoXtGLWidget_getClassTypeId() -> SoType"""
  return _soxt.SoXtGLWidget_getClassTypeId()

class SoXtRenderArea(SoXtGLWidget):
    """Proxy of C++ SoXtRenderArea class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtRenderArea_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtRenderArea_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtRenderArea_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtRenderArea_createInstance()

    createInstance = staticmethod(createInstance)
    def __init__(self, parent = None, name = None, embed = 1, mouseInput = 1, 
    keyboardInput = 1): 
        """
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            SbBool mouseInput = 1, SbBool keyboardInput = 1) -> SoXtRenderArea
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            SbBool mouseInput = 1) -> SoXtRenderArea
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1) -> SoXtRenderArea
        __init__(self, Widget parent = None, char name = None) -> SoXtRenderArea
        __init__(self, Widget parent = None) -> SoXtRenderArea
        __init__(self) -> SoXtRenderArea
        """
        this = _soxt.new_SoXtRenderArea(parent, name, embed, mouseInput, keyboardInput)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtRenderArea
    __del__ = lambda self : None;
    def setSceneGraph(self, *args):
        """setSceneGraph(self, SoNode scene)"""
        return _soxt.SoXtRenderArea_setSceneGraph(self, *args)

    def getSceneGraph(self):
        """getSceneGraph(self) -> SoNode"""
        return _soxt.SoXtRenderArea_getSceneGraph(self)

    def setOverlaySceneGraph(self, *args):
        """setOverlaySceneGraph(self, SoNode scene)"""
        return _soxt.SoXtRenderArea_setOverlaySceneGraph(self, *args)

    def getOverlaySceneGraph(self):
        """getOverlaySceneGraph(self) -> SoNode"""
        return _soxt.SoXtRenderArea_getOverlaySceneGraph(self)

    def setBackgroundColor(self, *args):
        """setBackgroundColor(self, SbColor color)"""
        return _soxt.SoXtRenderArea_setBackgroundColor(self, *args)

    def getBackgroundColor(self):
        """getBackgroundColor(self) -> SbColor"""
        return _soxt.SoXtRenderArea_getBackgroundColor(self)

    def setBackgroundIndex(self, *args):
        """setBackgroundIndex(self, int idx)"""
        return _soxt.SoXtRenderArea_setBackgroundIndex(self, *args)

    def getBackgroundIndex(self):
        """getBackgroundIndex(self) -> int"""
        return _soxt.SoXtRenderArea_getBackgroundIndex(self)

    def setOverlayBackgroundIndex(self, *args):
        """setOverlayBackgroundIndex(self, int idx)"""
        return _soxt.SoXtRenderArea_setOverlayBackgroundIndex(self, *args)

    def getOverlayBackgroundIndex(self):
        """getOverlayBackgroundIndex(self) -> int"""
        return _soxt.SoXtRenderArea_getOverlayBackgroundIndex(self)

    def setColorMap(self, *args):
        """setColorMap(self, int start, int num, SbColor colors)"""
        return _soxt.SoXtRenderArea_setColorMap(self, *args)

    def setOverlayColorMap(self, *args):
        """setOverlayColorMap(self, int start, int num, SbColor colors)"""
        return _soxt.SoXtRenderArea_setOverlayColorMap(self, *args)

    def setViewportRegion(self, *args):
        """setViewportRegion(self, SbViewportRegion newRegion)"""
        return _soxt.SoXtRenderArea_setViewportRegion(self, *args)

    def getViewportRegion(self):
        """getViewportRegion(self) -> SbViewportRegion"""
        return _soxt.SoXtRenderArea_getViewportRegion(self)

    def setTransparencyType(self, *args):
        """setTransparencyType(self, TransparencyType type)"""
        return _soxt.SoXtRenderArea_setTransparencyType(self, *args)

    def getTransparencyType(self):
        """getTransparencyType(self) -> TransparencyType"""
        return _soxt.SoXtRenderArea_getTransparencyType(self)

    def setAntialiasing(self, *args):
        """setAntialiasing(self, SbBool smoothing, int numPasses)"""
        return _soxt.SoXtRenderArea_setAntialiasing(self, *args)

    def getAntialiasing(self, *args):
        """getAntialiasing(self, SbBool smoothing, int numPasses)"""
        return _soxt.SoXtRenderArea_getAntialiasing(self, *args)

    def setClearBeforeRender(self, *args):
        """
        setClearBeforeRender(self, SbBool enable, SbBool zbEnable = 1)
        setClearBeforeRender(self, SbBool enable)
        """
        return _soxt.SoXtRenderArea_setClearBeforeRender(self, *args)

    def isClearBeforeRender(self):
        """isClearBeforeRender(self) -> SbBool"""
        return _soxt.SoXtRenderArea_isClearBeforeRender(self)

    def isClearZBufferBeforeRender(self):
        """isClearZBufferBeforeRender(self) -> SbBool"""
        return _soxt.SoXtRenderArea_isClearZBufferBeforeRender(self)

    def setClearBeforeOverlayRender(self, *args):
        """setClearBeforeOverlayRender(self, SbBool enable)"""
        return _soxt.SoXtRenderArea_setClearBeforeOverlayRender(self, *args)

    def isClearBeforeOverlayRender(self):
        """isClearBeforeOverlayRender(self) -> SbBool"""
        return _soxt.SoXtRenderArea_isClearBeforeOverlayRender(self)

    def setAutoRedraw(self, *args):
        """setAutoRedraw(self, SbBool enable)"""
        return _soxt.SoXtRenderArea_setAutoRedraw(self, *args)

    def isAutoRedraw(self):
        """isAutoRedraw(self) -> SbBool"""
        return _soxt.SoXtRenderArea_isAutoRedraw(self)

    def setRedrawPriority(self, *args):
        """setRedrawPriority(self, uint32_t priority)"""
        return _soxt.SoXtRenderArea_setRedrawPriority(self, *args)

    def getRedrawPriority(self):
        """getRedrawPriority(self) -> uint32_t"""
        return _soxt.SoXtRenderArea_getRedrawPriority(self)

    def getDefaultRedrawPriority():
        """getDefaultRedrawPriority() -> uint32_t"""
        return _soxt.SoXtRenderArea_getDefaultRedrawPriority()

    getDefaultRedrawPriority = staticmethod(getDefaultRedrawPriority)
    def render(self):
        """render(self)"""
        return _soxt.SoXtRenderArea_render(self)

    def renderOverlay(self):
        """renderOverlay(self)"""
        return _soxt.SoXtRenderArea_renderOverlay(self)

    def scheduleRedraw(self):
        """scheduleRedraw(self)"""
        return _soxt.SoXtRenderArea_scheduleRedraw(self)

    def scheduleOverlayRedraw(self):
        """scheduleOverlayRedraw(self)"""
        return _soxt.SoXtRenderArea_scheduleOverlayRedraw(self)

    def redrawOnSelectionChange(self, *args):
        """redrawOnSelectionChange(self, SoSelection selection)"""
        return _soxt.SoXtRenderArea_redrawOnSelectionChange(self, *args)

    def redrawOverlayOnSelectionChange(self, *args):
        """redrawOverlayOnSelectionChange(self, SoSelection selection)"""
        return _soxt.SoXtRenderArea_redrawOverlayOnSelectionChange(self, *args)

    def setEventCallback(self, *args):
        """
        setEventCallback(self, SoXtRenderAreaEventCB func, void user = None)
        setEventCallback(self, SoXtRenderAreaEventCB func)
        """
        return _soxt.SoXtRenderArea_setEventCallback(self, *args)

    def setSceneManager(self, *args):
        """setSceneManager(self, SoSceneManager manager)"""
        return _soxt.SoXtRenderArea_setSceneManager(self, *args)

    def getSceneManager(self):
        """getSceneManager(self) -> SoSceneManager"""
        return _soxt.SoXtRenderArea_getSceneManager(self)

    def setOverlaySceneManager(self, *args):
        """setOverlaySceneManager(self, SoSceneManager manager)"""
        return _soxt.SoXtRenderArea_setOverlaySceneManager(self, *args)

    def getOverlaySceneManager(self):
        """getOverlaySceneManager(self) -> SoSceneManager"""
        return _soxt.SoXtRenderArea_getOverlaySceneManager(self)

    def setGLRenderAction(self, *args):
        """setGLRenderAction(self, SoGLRenderAction action)"""
        return _soxt.SoXtRenderArea_setGLRenderAction(self, *args)

    def getGLRenderAction(self):
        """getGLRenderAction(self) -> SoGLRenderAction"""
        return _soxt.SoXtRenderArea_getGLRenderAction(self)

    def setOverlayGLRenderAction(self, *args):
        """setOverlayGLRenderAction(self, SoGLRenderAction action)"""
        return _soxt.SoXtRenderArea_setOverlayGLRenderAction(self, *args)

    def getOverlayGLRenderAction(self):
        """getOverlayGLRenderAction(self) -> SoGLRenderAction"""
        return _soxt.SoXtRenderArea_getOverlayGLRenderAction(self)

    def sendSoEvent(self, *args):
        """sendSoEvent(self, SoEvent event) -> SbBool"""
        return _soxt.SoXtRenderArea_sendSoEvent(self, *args)

    def registerDevice(self, *args):
        """registerDevice(self, SoXtDevice device)"""
        return _soxt.SoXtRenderArea_registerDevice(self, *args)

    def unregisterDevice(self, *args):
        """unregisterDevice(self, SoXtDevice device)"""
        return _soxt.SoXtRenderArea_unregisterDevice(self, *args)

SoXtRenderArea_swigregister = _soxt.SoXtRenderArea_swigregister
SoXtRenderArea_swigregister(SoXtRenderArea)

def SoXtRenderArea_initClass():
  """SoXtRenderArea_initClass()"""
  return _soxt.SoXtRenderArea_initClass()

def SoXtRenderArea_getClassTypeId():
  """SoXtRenderArea_getClassTypeId() -> SoType"""
  return _soxt.SoXtRenderArea_getClassTypeId()

def SoXtRenderArea_createInstance():
  """SoXtRenderArea_createInstance() -> void"""
  return _soxt.SoXtRenderArea_createInstance()

def SoXtRenderArea_getDefaultRedrawPriority():
  """SoXtRenderArea_getDefaultRedrawPriority() -> uint32_t"""
  return _soxt.SoXtRenderArea_getDefaultRedrawPriority()

class SoXtColorEditor(SoXtRenderArea):
    """Proxy of C++ SoXtColorEditor class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtColorEditor_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtColorEditor_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtColorEditor_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtColorEditor_createInstance()

    createInstance = staticmethod(createInstance)
    def __init__(self, parent = None, name = None, embed = 1): 
        """
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1) -> SoXtColorEditor
        __init__(self, Widget parent = None, char name = None) -> SoXtColorEditor
        __init__(self, Widget parent = None) -> SoXtColorEditor
        __init__(self) -> SoXtColorEditor
        """
        this = _soxt.new_SoXtColorEditor(parent, name, embed)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtColorEditor
    __del__ = lambda self : None;
    NONE = _soxt.SoXtColorEditor_NONE
    INTENSITY = _soxt.SoXtColorEditor_INTENSITY
    RGB = _soxt.SoXtColorEditor_RGB
    HSV = _soxt.SoXtColorEditor_HSV
    RGB_V = _soxt.SoXtColorEditor_RGB_V
    RGB_HSV = _soxt.SoXtColorEditor_RGB_HSV
    CONTINUOUS = _soxt.SoXtColorEditor_CONTINUOUS
    AFTER_ACCEPT = _soxt.SoXtColorEditor_AFTER_ACCEPT
    def attach(self, *args):
        """
        attach(self, SoSFColor color, SoBase node = None)
        attach(self, SoSFColor color)
        attach(self, SoMFColor color, int idx = 0, SoBase node = None)
        attach(self, SoMFColor color, int idx = 0)
        attach(self, SoMFColor color)
        attach(self, SoMFUInt32 color, int idx = 0, SoBase node = None)
        attach(self, SoMFUInt32 color, int idx = 0)
        attach(self, SoMFUInt32 color)
        """
        return _soxt.SoXtColorEditor_attach(self, *args)

    def detach(self):
        """detach(self)"""
        return _soxt.SoXtColorEditor_detach(self)

    def isAttached(self):
        """isAttached(self) -> SbBool"""
        return _soxt.SoXtColorEditor_isAttached(self)

    def addColorChangedCallback(self, *args):
        """
        addColorChangedCallback(self, SoXtColorEditorCB cb, void closure = None)
        addColorChangedCallback(self, SoXtColorEditorCB cb)
        """
        return _soxt.SoXtColorEditor_addColorChangedCallback(self, *args)

    def removeColorChangedCallback(self, *args):
        """
        removeColorChangedCallback(self, SoXtColorEditorCB cb, void closure = None)
        removeColorChangedCallback(self, SoXtColorEditorCB cb)
        """
        return _soxt.SoXtColorEditor_removeColorChangedCallback(self, *args)

    def setColor(self, *args):
        """setColor(self, SbColor color)"""
        return _soxt.SoXtColorEditor_setColor(self, *args)

    def getColor(self):
        """getColor(self) -> SbColor"""
        return _soxt.SoXtColorEditor_getColor(self)

    def setWYSIWYG(self, *args):
        """setWYSIWYG(self, SbBool enable)"""
        return _soxt.SoXtColorEditor_setWYSIWYG(self, *args)

    def isWYSIWYG(self):
        """isWYSIWYG(self) -> SbBool"""
        return _soxt.SoXtColorEditor_isWYSIWYG(self)

    def setCurrentSliders(self, *args):
        """setCurrentSliders(self, Sliders which)"""
        return _soxt.SoXtColorEditor_setCurrentSliders(self, *args)

    def getCurrentSliders(self):
        """getCurrentSliders(self) -> Sliders"""
        return _soxt.SoXtColorEditor_getCurrentSliders(self)

    def setUpdateFrequency(self, *args):
        """setUpdateFrequency(self, UpdateFrequency freq)"""
        return _soxt.SoXtColorEditor_setUpdateFrequency(self, *args)

    def getUpdateFrequency(self):
        """getUpdateFrequency(self) -> UpdateFrequency"""
        return _soxt.SoXtColorEditor_getUpdateFrequency(self)

    def getEditor(self):
        """getEditor(self) -> SoGuiColorEditor"""
        return _soxt.SoXtColorEditor_getEditor(self)

SoXtColorEditor_swigregister = _soxt.SoXtColorEditor_swigregister
SoXtColorEditor_swigregister(SoXtColorEditor)

def SoXtColorEditor_initClass():
  """SoXtColorEditor_initClass()"""
  return _soxt.SoXtColorEditor_initClass()

def SoXtColorEditor_getClassTypeId():
  """SoXtColorEditor_getClassTypeId() -> SoType"""
  return _soxt.SoXtColorEditor_getClassTypeId()

def SoXtColorEditor_createInstance():
  """SoXtColorEditor_createInstance() -> void"""
  return _soxt.SoXtColorEditor_createInstance()

class SoGuiMaterialEditor(pivy.coin.SoBaseKit):
    """Proxy of C++ SoGuiMaterialEditor class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoGuiMaterialEditor_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoGuiMaterialEditor_getTypeId(self)

    def getClassNodekitCatalog():
        """getClassNodekitCatalog() -> SoNodekitCatalog"""
        return _soxt.SoGuiMaterialEditor_getClassNodekitCatalog()

    getClassNodekitCatalog = staticmethod(getClassNodekitCatalog)
    def getNodekitCatalog(self):
        """getNodekitCatalog(self) -> SoNodekitCatalog"""
        return _soxt.SoGuiMaterialEditor_getNodekitCatalog(self)

    def initClass():
        """initClass()"""
        return _soxt.SoGuiMaterialEditor_initClass()

    initClass = staticmethod(initClass)
    def __init__(self): 
        """__init__(self) -> SoGuiMaterialEditor"""
        this = _soxt.new_SoGuiMaterialEditor()
        try: self.this.append(this)
        except: self.this = this
    CONTINUOUS = _soxt.SoGuiMaterialEditor_CONTINUOUS
    AFTER_ACCEPT = _soxt.SoGuiMaterialEditor_AFTER_ACCEPT
    material = _swig_property(_soxt.SoGuiMaterialEditor_material_get, _soxt.SoGuiMaterialEditor_material_set)
    index = _swig_property(_soxt.SoGuiMaterialEditor_index_get, _soxt.SoGuiMaterialEditor_index_set)
    update = _swig_property(_soxt.SoGuiMaterialEditor_update_get, _soxt.SoGuiMaterialEditor_update_set)
    def setColorEditorCallbacks(self, *args):
        """
        setColorEditorCallbacks(self, SoGuiColorEditorOpenCB open, SoGuiColorEditorCloseCB close, 
            void closure)
        """
        return _soxt.SoGuiMaterialEditor_setColorEditorCallbacks(self, *args)

    def getSphereMaterialNode(self):
        """getSphereMaterialNode(self) -> SoMaterial"""
        return _soxt.SoGuiMaterialEditor_getSphereMaterialNode(self)

SoGuiMaterialEditor_swigregister = _soxt.SoGuiMaterialEditor_swigregister
SoGuiMaterialEditor_swigregister(SoGuiMaterialEditor)

def SoGuiMaterialEditor_getClassTypeId():
  """SoGuiMaterialEditor_getClassTypeId() -> SoType"""
  return _soxt.SoGuiMaterialEditor_getClassTypeId()

def SoGuiMaterialEditor_getClassNodekitCatalog():
  """SoGuiMaterialEditor_getClassNodekitCatalog() -> SoNodekitCatalog"""
  return _soxt.SoGuiMaterialEditor_getClassNodekitCatalog()

def SoGuiMaterialEditor_initClass():
  """SoGuiMaterialEditor_initClass()"""
  return _soxt.SoGuiMaterialEditor_initClass()

class SoXtMaterialEditor(SoXtRenderArea):
    """Proxy of C++ SoXtMaterialEditor class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtMaterialEditor_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtMaterialEditor_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtMaterialEditor_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtMaterialEditor_createInstance()

    createInstance = staticmethod(createInstance)
    def __init__(self, parent = None, name = None, embed = 1): 
        """
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1) -> SoXtMaterialEditor
        __init__(self, Widget parent = None, char name = None) -> SoXtMaterialEditor
        __init__(self, Widget parent = None) -> SoXtMaterialEditor
        __init__(self) -> SoXtMaterialEditor
        """
        this = _soxt.new_SoXtMaterialEditor(parent, name, embed)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtMaterialEditor
    __del__ = lambda self : None;
    CONTINUOUS = _soxt.SoXtMaterialEditor_CONTINUOUS
    AFTER_ACCEPT = _soxt.SoXtMaterialEditor_AFTER_ACCEPT
    def attach(self, *args):
        """
        attach(self, SoMaterial material, int index = 0)
        attach(self, SoMaterial material)
        attach(self, SoVRMLMaterial material)
        """
        return _soxt.SoXtMaterialEditor_attach(self, *args)

    def detach(self):
        """detach(self)"""
        return _soxt.SoXtMaterialEditor_detach(self)

    def isAttached(self):
        """isAttached(self) -> SbBool"""
        return _soxt.SoXtMaterialEditor_isAttached(self)

    def addMaterialChangedCallback(self, *args):
        """
        addMaterialChangedCallback(self, SoXtMaterialEditorCB callback, void closure = None)
        addMaterialChangedCallback(self, SoXtMaterialEditorCB callback)
        """
        return _soxt.SoXtMaterialEditor_addMaterialChangedCallback(self, *args)

    def removeMaterialChangedCallback(self, *args):
        """
        removeMaterialChangedCallback(self, SoXtMaterialEditorCB callback, void closure = None)
        removeMaterialChangedCallback(self, SoXtMaterialEditorCB callback)
        """
        return _soxt.SoXtMaterialEditor_removeMaterialChangedCallback(self, *args)

    def setUpdateFrequency(self, *args):
        """setUpdateFrequency(self, UpdateFrequency frequency)"""
        return _soxt.SoXtMaterialEditor_setUpdateFrequency(self, *args)

    def getUpdateFrequency(self):
        """getUpdateFrequency(self) -> UpdateFrequency"""
        return _soxt.SoXtMaterialEditor_getUpdateFrequency(self)

    def setMaterial(self, *args):
        """
        setMaterial(self, SoMaterial material)
        setMaterial(self, SoVRMLMaterial material)
        """
        return _soxt.SoXtMaterialEditor_setMaterial(self, *args)

    def getMaterial(self):
        """getMaterial(self) -> SoMaterial"""
        return _soxt.SoXtMaterialEditor_getMaterial(self)

    def isAttachedVRML(self):
        """isAttachedVRML(self) -> SbBool"""
        return _soxt.SoXtMaterialEditor_isAttachedVRML(self)

    def getEditor(self):
        """getEditor(self) -> SoGuiMaterialEditor"""
        return _soxt.SoXtMaterialEditor_getEditor(self)

SoXtMaterialEditor_swigregister = _soxt.SoXtMaterialEditor_swigregister
SoXtMaterialEditor_swigregister(SoXtMaterialEditor)

def SoXtMaterialEditor_initClass():
  """SoXtMaterialEditor_initClass()"""
  return _soxt.SoXtMaterialEditor_initClass()

def SoXtMaterialEditor_getClassTypeId():
  """SoXtMaterialEditor_getClassTypeId() -> SoType"""
  return _soxt.SoXtMaterialEditor_getClassTypeId()

def SoXtMaterialEditor_createInstance():
  """SoXtMaterialEditor_createInstance() -> void"""
  return _soxt.SoXtMaterialEditor_createInstance()

class SoXtViewer(SoXtRenderArea):
    """Proxy of C++ SoXtViewer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtViewer_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtViewer_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtViewer_getTypeId(self)

    BROWSER = _soxt.SoXtViewer_BROWSER
    EDITOR = _soxt.SoXtViewer_EDITOR
    VIEW_AS_IS = _soxt.SoXtViewer_VIEW_AS_IS
    VIEW_HIDDEN_LINE = _soxt.SoXtViewer_VIEW_HIDDEN_LINE
    VIEW_NO_TEXTURE = _soxt.SoXtViewer_VIEW_NO_TEXTURE
    VIEW_LOW_COMPLEXITY = _soxt.SoXtViewer_VIEW_LOW_COMPLEXITY
    VIEW_LINE = _soxt.SoXtViewer_VIEW_LINE
    VIEW_POINT = _soxt.SoXtViewer_VIEW_POINT
    VIEW_BBOX = _soxt.SoXtViewer_VIEW_BBOX
    VIEW_LOW_RES_LINE = _soxt.SoXtViewer_VIEW_LOW_RES_LINE
    VIEW_LOW_RES_POINT = _soxt.SoXtViewer_VIEW_LOW_RES_POINT
    VIEW_SAME_AS_STILL = _soxt.SoXtViewer_VIEW_SAME_AS_STILL
    VIEW_WIREFRAME_OVERLAY = _soxt.SoXtViewer_VIEW_WIREFRAME_OVERLAY
    STILL = _soxt.SoXtViewer_STILL
    INTERACTIVE = _soxt.SoXtViewer_INTERACTIVE
    BUFFER_SINGLE = _soxt.SoXtViewer_BUFFER_SINGLE
    BUFFER_DOUBLE = _soxt.SoXtViewer_BUFFER_DOUBLE
    BUFFER_INTERACTIVE = _soxt.SoXtViewer_BUFFER_INTERACTIVE
    VARIABLE_NEAR_PLANE = _soxt.SoXtViewer_VARIABLE_NEAR_PLANE
    CONSTANT_NEAR_PLANE = _soxt.SoXtViewer_CONSTANT_NEAR_PLANE
    def setCamera(self, *args):
        """setCamera(self, SoCamera camera)"""
        return _soxt.SoXtViewer_setCamera(self, *args)

    def getCamera(self):
        """getCamera(self) -> SoCamera"""
        return _soxt.SoXtViewer_getCamera(self)

    def setCameraType(self, *args):
        """setCameraType(self, SoType type)"""
        return _soxt.SoXtViewer_setCameraType(self, *args)

    def getCameraType(self):
        """getCameraType(self) -> SoType"""
        return _soxt.SoXtViewer_getCameraType(self)

    def toggleCameraType(self):
        """toggleCameraType(self)"""
        return _soxt.SoXtViewer_toggleCameraType(self)

    def viewAll(self):
        """viewAll(self)"""
        return _soxt.SoXtViewer_viewAll(self)

    def saveHomePosition(self):
        """saveHomePosition(self)"""
        return _soxt.SoXtViewer_saveHomePosition(self)

    def resetToHomePosition(self):
        """resetToHomePosition(self)"""
        return _soxt.SoXtViewer_resetToHomePosition(self)

    def setHeadlight(self, *args):
        """setHeadlight(self, SbBool enable)"""
        return _soxt.SoXtViewer_setHeadlight(self, *args)

    def isHeadlight(self):
        """isHeadlight(self) -> SbBool"""
        return _soxt.SoXtViewer_isHeadlight(self)

    def getHeadlight(self):
        """getHeadlight(self) -> SoDirectionalLight"""
        return _soxt.SoXtViewer_getHeadlight(self)

    def setDrawStyle(self, *args):
        """setDrawStyle(self, DrawType type, DrawStyle style)"""
        return _soxt.SoXtViewer_setDrawStyle(self, *args)

    def getDrawStyle(self, *args):
        """getDrawStyle(self, DrawType type) -> DrawStyle"""
        return _soxt.SoXtViewer_getDrawStyle(self, *args)

    def setBufferingType(self, *args):
        """setBufferingType(self, BufferType type)"""
        return _soxt.SoXtViewer_setBufferingType(self, *args)

    def getBufferingType(self):
        """getBufferingType(self) -> BufferType"""
        return _soxt.SoXtViewer_getBufferingType(self)

    def setViewing(self, *args):
        """setViewing(self, SbBool enable)"""
        return _soxt.SoXtViewer_setViewing(self, *args)

    def isViewing(self):
        """isViewing(self) -> SbBool"""
        return _soxt.SoXtViewer_isViewing(self)

    def setCursorEnabled(self, *args):
        """setCursorEnabled(self, SbBool enable)"""
        return _soxt.SoXtViewer_setCursorEnabled(self, *args)

    def isCursorEnabled(self):
        """isCursorEnabled(self) -> SbBool"""
        return _soxt.SoXtViewer_isCursorEnabled(self)

    def setAutoClipping(self, *args):
        """setAutoClipping(self, SbBool enable)"""
        return _soxt.SoXtViewer_setAutoClipping(self, *args)

    def isAutoClipping(self):
        """isAutoClipping(self) -> SbBool"""
        return _soxt.SoXtViewer_isAutoClipping(self)

    def setAutoClippingStrategy(self, *args):
        """
        setAutoClippingStrategy(self, AutoClippingStrategy strategy, float value = 0.6, SoXtAutoClippingCB cb = None, 
            void cbuserdata = None)
        setAutoClippingStrategy(self, AutoClippingStrategy strategy, float value = 0.6, SoXtAutoClippingCB cb = None)
        setAutoClippingStrategy(self, AutoClippingStrategy strategy, float value = 0.6)
        setAutoClippingStrategy(self, AutoClippingStrategy strategy)
        """
        return _soxt.SoXtViewer_setAutoClippingStrategy(self, *args)

    def setStereoViewing(self, *args):
        """setStereoViewing(self, SbBool enable)"""
        return _soxt.SoXtViewer_setStereoViewing(self, *args)

    def isStereoViewing(self):
        """isStereoViewing(self) -> SbBool"""
        return _soxt.SoXtViewer_isStereoViewing(self)

    def setStereoOffset(self, *args):
        """setStereoOffset(self, float dist)"""
        return _soxt.SoXtViewer_setStereoOffset(self, *args)

    def getStereoOffset(self):
        """getStereoOffset(self) -> float"""
        return _soxt.SoXtViewer_getStereoOffset(self)

    STEREO_NONE = _soxt.SoXtViewer_STEREO_NONE
    STEREO_ANAGLYPH = _soxt.SoXtViewer_STEREO_ANAGLYPH
    STEREO_QUADBUFFER = _soxt.SoXtViewer_STEREO_QUADBUFFER
    STEREO_INTERLEAVED_ROWS = _soxt.SoXtViewer_STEREO_INTERLEAVED_ROWS
    STEREO_INTERLEAVED_COLUMNS = _soxt.SoXtViewer_STEREO_INTERLEAVED_COLUMNS
    def setStereoType(self, *args):
        """setStereoType(self, StereoType s) -> SbBool"""
        return _soxt.SoXtViewer_setStereoType(self, *args)

    def getStereoType(self):
        """getStereoType(self) -> StereoType"""
        return _soxt.SoXtViewer_getStereoType(self)

    def setAnaglyphStereoColorMasks(self, *args):
        """setAnaglyphStereoColorMasks(self, SbBool left, SbBool right)"""
        return _soxt.SoXtViewer_setAnaglyphStereoColorMasks(self, *args)

    def getAnaglyphStereoColorMasks(self, *args):
        """getAnaglyphStereoColorMasks(self, SbBool left, SbBool right)"""
        return _soxt.SoXtViewer_getAnaglyphStereoColorMasks(self, *args)

    def setDetailSeek(self, *args):
        """setDetailSeek(self, SbBool enable)"""
        return _soxt.SoXtViewer_setDetailSeek(self, *args)

    def isDetailSeek(self):
        """isDetailSeek(self) -> SbBool"""
        return _soxt.SoXtViewer_isDetailSeek(self)

    def setSeekTime(self, *args):
        """setSeekTime(self, float seconds)"""
        return _soxt.SoXtViewer_setSeekTime(self, *args)

    def getSeekTime(self):
        """getSeekTime(self) -> float"""
        return _soxt.SoXtViewer_getSeekTime(self)

    def addStartCallback(self, *args):
        """
        addStartCallback(self, SoXtViewerCB func, void data = None)
        addStartCallback(self, SoXtViewerCB func)
        """
        return _soxt.SoXtViewer_addStartCallback(self, *args)

    def addFinishCallback(self, *args):
        """
        addFinishCallback(self, SoXtViewerCB func, void data = None)
        addFinishCallback(self, SoXtViewerCB func)
        """
        return _soxt.SoXtViewer_addFinishCallback(self, *args)

    def removeStartCallback(self, *args):
        """
        removeStartCallback(self, SoXtViewerCB func, void data = None)
        removeStartCallback(self, SoXtViewerCB func)
        """
        return _soxt.SoXtViewer_removeStartCallback(self, *args)

    def removeFinishCallback(self, *args):
        """
        removeFinishCallback(self, SoXtViewerCB func, void data = None)
        removeFinishCallback(self, SoXtViewerCB func)
        """
        return _soxt.SoXtViewer_removeFinishCallback(self, *args)

    def setWireframeOverlayColor(self, *args):
        """setWireframeOverlayColor(self, SbColor color)"""
        return _soxt.SoXtViewer_setWireframeOverlayColor(self, *args)

    def getWireframeOverlayColor(self):
        """getWireframeOverlayColor(self) -> SbColor"""
        return _soxt.SoXtViewer_getWireframeOverlayColor(self)

    def setDoubleBuffer(self, *args):
        """setDoubleBuffer(self, SbBool enable)"""
        return _soxt.SoXtViewer_setDoubleBuffer(self, *args)

    def setSceneGraph(self, *args):
        """setSceneGraph(self, SoNode root)"""
        return _soxt.SoXtViewer_setSceneGraph(self, *args)

    def getSceneGraph(self):
        """getSceneGraph(self) -> SoNode"""
        return _soxt.SoXtViewer_getSceneGraph(self)

SoXtViewer_swigregister = _soxt.SoXtViewer_swigregister
SoXtViewer_swigregister(SoXtViewer)

def SoXtViewer_initClass():
  """SoXtViewer_initClass()"""
  return _soxt.SoXtViewer_initClass()

def SoXtViewer_getClassTypeId():
  """SoXtViewer_getClassTypeId() -> SoType"""
  return _soxt.SoXtViewer_getClassTypeId()

class SoXtFullViewer(SoXtViewer):
    """Proxy of C++ SoXtFullViewer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtFullViewer_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtFullViewer_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtFullViewer_getTypeId(self)

    BUILD_NONE = _soxt.SoXtFullViewer_BUILD_NONE
    BUILD_DECORATION = _soxt.SoXtFullViewer_BUILD_DECORATION
    BUILD_POPUP = _soxt.SoXtFullViewer_BUILD_POPUP
    BUILD_ALL = _soxt.SoXtFullViewer_BUILD_ALL
    def setDecoration(self, *args):
        """setDecoration(self, SbBool on)"""
        return _soxt.SoXtFullViewer_setDecoration(self, *args)

    def isDecoration(self):
        """isDecoration(self) -> SbBool"""
        return _soxt.SoXtFullViewer_isDecoration(self)

    def setPopupMenuEnabled(self, *args):
        """setPopupMenuEnabled(self, SbBool on)"""
        return _soxt.SoXtFullViewer_setPopupMenuEnabled(self, *args)

    def isPopupMenuEnabled(self):
        """isPopupMenuEnabled(self) -> SbBool"""
        return _soxt.SoXtFullViewer_isPopupMenuEnabled(self)

    def getAppPushButtonParent(self):
        """getAppPushButtonParent(self) -> Widget"""
        return _soxt.SoXtFullViewer_getAppPushButtonParent(self)

    def addAppPushButton(self, *args):
        """addAppPushButton(self, Widget newButton)"""
        return _soxt.SoXtFullViewer_addAppPushButton(self, *args)

    def insertAppPushButton(self, *args):
        """insertAppPushButton(self, Widget newButton, int index)"""
        return _soxt.SoXtFullViewer_insertAppPushButton(self, *args)

    def removeAppPushButton(self, *args):
        """removeAppPushButton(self, Widget oldButton)"""
        return _soxt.SoXtFullViewer_removeAppPushButton(self, *args)

    def findAppPushButton(self, *args):
        """findAppPushButton(self, Widget oldButton) -> int"""
        return _soxt.SoXtFullViewer_findAppPushButton(self, *args)

    def lengthAppPushButton(self):
        """lengthAppPushButton(self) -> int"""
        return _soxt.SoXtFullViewer_lengthAppPushButton(self)

    def getRenderAreaWidget(self):
        """getRenderAreaWidget(self) -> Widget"""
        return _soxt.SoXtFullViewer_getRenderAreaWidget(self)

    def setViewing(self, *args):
        """setViewing(self, SbBool on)"""
        return _soxt.SoXtFullViewer_setViewing(self, *args)

    def setComponentCursor(self, *args):
        """setComponentCursor(self, SoXtCursor cursor)"""
        return _soxt.SoXtFullViewer_setComponentCursor(self, *args)

SoXtFullViewer_swigregister = _soxt.SoXtFullViewer_swigregister
SoXtFullViewer_swigregister(SoXtFullViewer)

def SoXtFullViewer_initClass():
  """SoXtFullViewer_initClass()"""
  return _soxt.SoXtFullViewer_initClass()

def SoXtFullViewer_getClassTypeId():
  """SoXtFullViewer_getClassTypeId() -> SoType"""
  return _soxt.SoXtFullViewer_getClassTypeId()

class SoXtConstrainedViewer(SoXtFullViewer):
    """Proxy of C++ SoXtConstrainedViewer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtConstrainedViewer_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtConstrainedViewer_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtConstrainedViewer_getTypeId(self)

    def setUpDirection(self, *args):
        """setUpDirection(self, SbVec3f dir)"""
        return _soxt.SoXtConstrainedViewer_setUpDirection(self, *args)

    def getUpDirection(self):
        """getUpDirection(self) -> SbVec3f"""
        return _soxt.SoXtConstrainedViewer_getUpDirection(self)

    def setCamera(self, *args):
        """setCamera(self, SoCamera newcam)"""
        return _soxt.SoXtConstrainedViewer_setCamera(self, *args)

    def saveHomePosition(self):
        """saveHomePosition(self)"""
        return _soxt.SoXtConstrainedViewer_saveHomePosition(self)

    def resetToHomePosition(self):
        """resetToHomePosition(self)"""
        return _soxt.SoXtConstrainedViewer_resetToHomePosition(self)

SoXtConstrainedViewer_swigregister = _soxt.SoXtConstrainedViewer_swigregister
SoXtConstrainedViewer_swigregister(SoXtConstrainedViewer)

def SoXtConstrainedViewer_initClass():
  """SoXtConstrainedViewer_initClass()"""
  return _soxt.SoXtConstrainedViewer_initClass()

def SoXtConstrainedViewer_getClassTypeId():
  """SoXtConstrainedViewer_getClassTypeId() -> SoType"""
  return _soxt.SoXtConstrainedViewer_getClassTypeId()

class SoXtExaminerViewer(SoXtFullViewer):
    """Proxy of C++ SoXtExaminerViewer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtExaminerViewer_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtExaminerViewer_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtExaminerViewer_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtExaminerViewer_createInstance()

    createInstance = staticmethod(createInstance)
    def __init__(self, *args): 
        """
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            BuildFlag flag = BUILD_ALL, Type type = BROWSER) -> SoXtExaminerViewer
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            BuildFlag flag = BUILD_ALL) -> SoXtExaminerViewer
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1) -> SoXtExaminerViewer
        __init__(self, Widget parent = None, char name = None) -> SoXtExaminerViewer
        __init__(self, Widget parent = None) -> SoXtExaminerViewer
        __init__(self) -> SoXtExaminerViewer
        """
        this = _soxt.new_SoXtExaminerViewer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtExaminerViewer
    __del__ = lambda self : None;
    def setAnimationEnabled(self, *args):
        """setAnimationEnabled(self, SbBool enable)"""
        return _soxt.SoXtExaminerViewer_setAnimationEnabled(self, *args)

    def isAnimationEnabled(self):
        """isAnimationEnabled(self) -> SbBool"""
        return _soxt.SoXtExaminerViewer_isAnimationEnabled(self)

    def stopAnimating(self):
        """stopAnimating(self)"""
        return _soxt.SoXtExaminerViewer_stopAnimating(self)

    def isAnimating(self):
        """isAnimating(self) -> SbBool"""
        return _soxt.SoXtExaminerViewer_isAnimating(self)

    def setFeedbackVisibility(self, *args):
        """setFeedbackVisibility(self, SbBool enable)"""
        return _soxt.SoXtExaminerViewer_setFeedbackVisibility(self, *args)

    def isFeedbackVisible(self):
        """isFeedbackVisible(self) -> SbBool"""
        return _soxt.SoXtExaminerViewer_isFeedbackVisible(self)

    def setFeedbackSize(self, *args):
        """setFeedbackSize(self, int size)"""
        return _soxt.SoXtExaminerViewer_setFeedbackSize(self, *args)

    def getFeedbackSize(self):
        """getFeedbackSize(self) -> int"""
        return _soxt.SoXtExaminerViewer_getFeedbackSize(self)

    def setViewing(self, *args):
        """setViewing(self, SbBool enable)"""
        return _soxt.SoXtExaminerViewer_setViewing(self, *args)

    def setCamera(self, *args):
        """setCamera(self, SoCamera camera)"""
        return _soxt.SoXtExaminerViewer_setCamera(self, *args)

    def setCursorEnabled(self, *args):
        """setCursorEnabled(self, SbBool enable)"""
        return _soxt.SoXtExaminerViewer_setCursorEnabled(self, *args)

SoXtExaminerViewer_swigregister = _soxt.SoXtExaminerViewer_swigregister
SoXtExaminerViewer_swigregister(SoXtExaminerViewer)

def SoXtExaminerViewer_initClass():
  """SoXtExaminerViewer_initClass()"""
  return _soxt.SoXtExaminerViewer_initClass()

def SoXtExaminerViewer_getClassTypeId():
  """SoXtExaminerViewer_getClassTypeId() -> SoType"""
  return _soxt.SoXtExaminerViewer_getClassTypeId()

def SoXtExaminerViewer_createInstance():
  """SoXtExaminerViewer_createInstance() -> void"""
  return _soxt.SoXtExaminerViewer_createInstance()

class SoXtFlyViewer(SoXtConstrainedViewer):
    """Proxy of C++ SoXtFlyViewer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtFlyViewer_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtFlyViewer_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtFlyViewer_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtFlyViewer_createInstance()

    createInstance = staticmethod(createInstance)
    def __init__(self, *args): 
        """
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            BuildFlag flag = BUILD_ALL, Type type = BROWSER) -> SoXtFlyViewer
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            BuildFlag flag = BUILD_ALL) -> SoXtFlyViewer
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1) -> SoXtFlyViewer
        __init__(self, Widget parent = None, char name = None) -> SoXtFlyViewer
        __init__(self, Widget parent = None) -> SoXtFlyViewer
        __init__(self) -> SoXtFlyViewer
        """
        this = _soxt.new_SoXtFlyViewer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtFlyViewer
    __del__ = lambda self : None;
    def setViewing(self, *args):
        """setViewing(self, SbBool enable)"""
        return _soxt.SoXtFlyViewer_setViewing(self, *args)

    def viewAll(self):
        """viewAll(self)"""
        return _soxt.SoXtFlyViewer_viewAll(self)

    def resetToHomePosition(self):
        """resetToHomePosition(self)"""
        return _soxt.SoXtFlyViewer_resetToHomePosition(self)

    def setCamera(self, *args):
        """setCamera(self, SoCamera camera)"""
        return _soxt.SoXtFlyViewer_setCamera(self, *args)

    def setCursorEnabled(self, *args):
        """setCursorEnabled(self, SbBool enable)"""
        return _soxt.SoXtFlyViewer_setCursorEnabled(self, *args)

    def setCameraType(self, *args):
        """setCameraType(self, SoType type)"""
        return _soxt.SoXtFlyViewer_setCameraType(self, *args)

SoXtFlyViewer_swigregister = _soxt.SoXtFlyViewer_swigregister
SoXtFlyViewer_swigregister(SoXtFlyViewer)

def SoXtFlyViewer_initClass():
  """SoXtFlyViewer_initClass()"""
  return _soxt.SoXtFlyViewer_initClass()

def SoXtFlyViewer_getClassTypeId():
  """SoXtFlyViewer_getClassTypeId() -> SoType"""
  return _soxt.SoXtFlyViewer_getClassTypeId()

def SoXtFlyViewer_createInstance():
  """SoXtFlyViewer_createInstance() -> void"""
  return _soxt.SoXtFlyViewer_createInstance()

class SoXtPlaneViewer(SoXtFullViewer):
    """Proxy of C++ SoXtPlaneViewer class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtPlaneViewer_initClass()

    initClass = staticmethod(initClass)
    def getClassTypeId():
        """getClassTypeId() -> SoType"""
        return _soxt.SoXtPlaneViewer_getClassTypeId()

    getClassTypeId = staticmethod(getClassTypeId)
    def getTypeId(self):
        """getTypeId(self) -> SoType"""
        return _soxt.SoXtPlaneViewer_getTypeId(self)

    def createInstance():
        """createInstance() -> void"""
        return _soxt.SoXtPlaneViewer_createInstance()

    createInstance = staticmethod(createInstance)
    def __init__(self, *args): 
        """
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            BuildFlag flag = BUILD_ALL, Type type = BROWSER) -> SoXtPlaneViewer
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1, 
            BuildFlag flag = BUILD_ALL) -> SoXtPlaneViewer
        __init__(self, Widget parent = None, char name = None, SbBool embed = 1) -> SoXtPlaneViewer
        __init__(self, Widget parent = None, char name = None) -> SoXtPlaneViewer
        __init__(self, Widget parent = None) -> SoXtPlaneViewer
        __init__(self) -> SoXtPlaneViewer
        """
        this = _soxt.new_SoXtPlaneViewer(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtPlaneViewer
    __del__ = lambda self : None;
    def setViewing(self, *args):
        """setViewing(self, SbBool enable)"""
        return _soxt.SoXtPlaneViewer_setViewing(self, *args)

    def setCamera(self, *args):
        """setCamera(self, SoCamera camera)"""
        return _soxt.SoXtPlaneViewer_setCamera(self, *args)

    def setCursorEnabled(self, *args):
        """setCursorEnabled(self, SbBool enable)"""
        return _soxt.SoXtPlaneViewer_setCursorEnabled(self, *args)

SoXtPlaneViewer_swigregister = _soxt.SoXtPlaneViewer_swigregister
SoXtPlaneViewer_swigregister(SoXtPlaneViewer)

def SoXtPlaneViewer_initClass():
  """SoXtPlaneViewer_initClass()"""
  return _soxt.SoXtPlaneViewer_initClass()

def SoXtPlaneViewer_getClassTypeId():
  """SoXtPlaneViewer_getClassTypeId() -> SoType"""
  return _soxt.SoXtPlaneViewer_getClassTypeId()

def SoXtPlaneViewer_createInstance():
  """SoXtPlaneViewer_createInstance() -> void"""
  return _soxt.SoXtPlaneViewer_createInstance()

class SoXtPopupMenu(object):
    """Proxy of C++ SoXtPopupMenu class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    def createInstance():
        """createInstance() -> SoXtPopupMenu"""
        return _soxt.SoXtPopupMenu_createInstance()

    createInstance = staticmethod(createInstance)
    __swig_destroy__ = _soxt.delete_SoXtPopupMenu
    __del__ = lambda self : None;
    def newMenu(self, *args):
        """
        newMenu(self, char name, int menuid = -1) -> int
        newMenu(self, char name) -> int
        """
        return _soxt.SoXtPopupMenu_newMenu(self, *args)

    def getMenu(self, *args):
        """getMenu(self, char name) -> int"""
        return _soxt.SoXtPopupMenu_getMenu(self, *args)

    def setMenuTitle(self, *args):
        """setMenuTitle(self, int id, char title)"""
        return _soxt.SoXtPopupMenu_setMenuTitle(self, *args)

    def getMenuTitle(self, *args):
        """getMenuTitle(self, int id) -> char"""
        return _soxt.SoXtPopupMenu_getMenuTitle(self, *args)

    def newMenuItem(self, *args):
        """
        newMenuItem(self, char name, int itemid = -1) -> int
        newMenuItem(self, char name) -> int
        """
        return _soxt.SoXtPopupMenu_newMenuItem(self, *args)

    def getMenuItem(self, *args):
        """getMenuItem(self, char name) -> int"""
        return _soxt.SoXtPopupMenu_getMenuItem(self, *args)

    def setMenuItemTitle(self, *args):
        """setMenuItemTitle(self, int itemid, char title)"""
        return _soxt.SoXtPopupMenu_setMenuItemTitle(self, *args)

    def getMenuItemTitle(self, *args):
        """getMenuItemTitle(self, int itemid) -> char"""
        return _soxt.SoXtPopupMenu_getMenuItemTitle(self, *args)

    def setMenuItemEnabled(self, *args):
        """setMenuItemEnabled(self, int itemid, SbBool enabled)"""
        return _soxt.SoXtPopupMenu_setMenuItemEnabled(self, *args)

    def getMenuItemEnabled(self, *args):
        """getMenuItemEnabled(self, int itemid) -> SbBool"""
        return _soxt.SoXtPopupMenu_getMenuItemEnabled(self, *args)

    def setMenuItemMarked(self, *args):
        """setMenuItemMarked(self, int itemid, SbBool marked)"""
        return _soxt.SoXtPopupMenu_setMenuItemMarked(self, *args)

    def getMenuItemMarked(self, *args):
        """getMenuItemMarked(self, int itemid) -> SbBool"""
        return _soxt.SoXtPopupMenu_getMenuItemMarked(self, *args)

    def addMenu(self, *args):
        """
        addMenu(self, int menuid, int submenuid, int pos = -1)
        addMenu(self, int menuid, int submenuid)
        """
        return _soxt.SoXtPopupMenu_addMenu(self, *args)

    def addMenuItem(self, *args):
        """
        addMenuItem(self, int menuid, int itemid, int pos = -1)
        addMenuItem(self, int menuid, int itemid)
        """
        return _soxt.SoXtPopupMenu_addMenuItem(self, *args)

    def addSeparator(self, *args):
        """
        addSeparator(self, int menuid, int pos = -1)
        addSeparator(self, int menuid)
        """
        return _soxt.SoXtPopupMenu_addSeparator(self, *args)

    def removeMenu(self, *args):
        """removeMenu(self, int menuid)"""
        return _soxt.SoXtPopupMenu_removeMenu(self, *args)

    def removeMenuItem(self, *args):
        """removeMenuItem(self, int itemid)"""
        return _soxt.SoXtPopupMenu_removeMenuItem(self, *args)

    def popUp(self, *args):
        """popUp(self, Widget inside, int x, int y)"""
        return _soxt.SoXtPopupMenu_popUp(self, *args)

    def newRadioGroup(self, *args):
        """
        newRadioGroup(self, int groupid = -1) -> int
        newRadioGroup(self) -> int
        """
        return _soxt.SoXtPopupMenu_newRadioGroup(self, *args)

    def getRadioGroup(self, *args):
        """getRadioGroup(self, int itemid) -> int"""
        return _soxt.SoXtPopupMenu_getRadioGroup(self, *args)

    def getRadioGroupSize(self, *args):
        """getRadioGroupSize(self, int groupid) -> int"""
        return _soxt.SoXtPopupMenu_getRadioGroupSize(self, *args)

    def addRadioGroupItem(self, *args):
        """addRadioGroupItem(self, int groupid, int itemid)"""
        return _soxt.SoXtPopupMenu_addRadioGroupItem(self, *args)

    def removeRadioGroupItem(self, *args):
        """removeRadioGroupItem(self, int itemid)"""
        return _soxt.SoXtPopupMenu_removeRadioGroupItem(self, *args)

    def setRadioGroupMarkedItem(self, *args):
        """setRadioGroupMarkedItem(self, int itemid)"""
        return _soxt.SoXtPopupMenu_setRadioGroupMarkedItem(self, *args)

    def getRadioGroupMarkedItem(self, *args):
        """getRadioGroupMarkedItem(self, int groupid) -> int"""
        return _soxt.SoXtPopupMenu_getRadioGroupMarkedItem(self, *args)

    def addMenuSelectionCallback(self, *args):
        """addMenuSelectionCallback(self, SoXtMenuSelectionCallback callback, void data)"""
        return _soxt.SoXtPopupMenu_addMenuSelectionCallback(self, *args)

    def removeMenuSelectionCallback(self, *args):
        """removeMenuSelectionCallback(self, SoXtMenuSelectionCallback callback, void data)"""
        return _soxt.SoXtPopupMenu_removeMenuSelectionCallback(self, *args)

SoXtPopupMenu_swigregister = _soxt.SoXtPopupMenu_swigregister
SoXtPopupMenu_swigregister(SoXtPopupMenu)

def SoXtPopupMenu_createInstance():
  """SoXtPopupMenu_createInstance() -> SoXtPopupMenu"""
  return _soxt.SoXtPopupMenu_createInstance()

class SoXtResource(object):
    """Proxy of C++ SoXtResource class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def __init__(self, *args): 
        """__init__(self, Widget widget) -> SoXtResource"""
        this = _soxt.new_SoXtResource(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtResource
    __del__ = lambda self : None;
    def getResource(self, *args):
        """
        getResource(self, char rname, char rclass, SbColor retval) -> SbBool
        getResource(self, char rname, char rclass, short retval) -> SbBool
        getResource(self, char rname, char rclass, unsigned short retval) -> SbBool
        getResource(self, char rname, char rclass, char retval) -> SbBool
        getResource(self, char rname, char rclass, SbBool retval) -> SbBool
        getResource(self, char rname, char rclass, float retval) -> SbBool
        """
        return _soxt.SoXtResource_getResource(self, *args)

    def DumpInternals(self):
        """DumpInternals(self)"""
        return _soxt.SoXtResource_DumpInternals(self)

SoXtResource_swigregister = _soxt.SoXtResource_swigregister
SoXtResource_swigregister(SoXtResource)

class SoXt(object):
    """Proxy of C++ SoXt class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    def init(*args):
        """
        init(char appname, char classname = "SoXt") -> Widget
        init(char appname) -> Widget
        init(int argc, char argv, char appname, char classname = "SoXt") -> Widget
        init(int argc, char argv, char appname) -> Widget
        init(Widget toplevelwidget)
        """
        return _soxt.SoXt_init(*args)

    init = staticmethod(init)
    def mainLoop():
        """mainLoop()"""
        return _soxt.SoXt_mainLoop()

    mainLoop = staticmethod(mainLoop)
    def exitMainLoop():
        """exitMainLoop()"""
        return _soxt.SoXt_exitMainLoop()

    exitMainLoop = staticmethod(exitMainLoop)
    def done():
        """done()"""
        return _soxt.SoXt_done()

    done = staticmethod(done)
    def getTopLevelWidget():
        """getTopLevelWidget() -> Widget"""
        return _soxt.SoXt_getTopLevelWidget()

    getTopLevelWidget = staticmethod(getTopLevelWidget)
    def getShellWidget(*args):
        """getShellWidget(Widget w) -> Widget"""
        return _soxt.SoXt_getShellWidget(*args)

    getShellWidget = staticmethod(getShellWidget)
    def show(*args):
        """show(Widget widget)"""
        return _soxt.SoXt_show(*args)

    show = staticmethod(show)
    def hide(*args):
        """hide(Widget widget)"""
        return _soxt.SoXt_hide(*args)

    hide = staticmethod(hide)
    def setWidgetSize(*args):
        """setWidgetSize(Widget widget, SbVec2s size)"""
        return _soxt.SoXt_setWidgetSize(*args)

    setWidgetSize = staticmethod(setWidgetSize)
    def getWidgetSize(*args):
        """getWidgetSize(Widget widget) -> SbVec2s"""
        return _soxt.SoXt_getWidgetSize(*args)

    getWidgetSize = staticmethod(getWidgetSize)
    def createSimpleErrorDialog(*args):
        """
        createSimpleErrorDialog(Widget widget, char title, char string1, char string2 = None)
        createSimpleErrorDialog(Widget widget, char title, char string1)
        """
        return _soxt.SoXt_createSimpleErrorDialog(*args)

    createSimpleErrorDialog = staticmethod(createSimpleErrorDialog)
    def getVersionInfo(major = None, minor = None, micro = None):
        """
        getVersionInfo(int major = None, int minor = None, int micro = None)
        getVersionInfo(int major = None, int minor = None)
        getVersionInfo(int major = None)
        getVersionInfo()
        """
        return _soxt.SoXt_getVersionInfo(major, minor, micro)

    getVersionInfo = staticmethod(getVersionInfo)
    def getVersionString():
        """getVersionString() -> char"""
        return _soxt.SoXt_getVersionString()

    getVersionString = staticmethod(getVersionString)
    def getVersionToolkitString():
        """getVersionToolkitString() -> char"""
        return _soxt.SoXt_getVersionToolkitString()

    getVersionToolkitString = staticmethod(getVersionToolkitString)
    UNSPECIFIED_ERROR = _soxt.SoXt_UNSPECIFIED_ERROR
    NO_OPENGL_CANVAS = _soxt.SoXt_NO_OPENGL_CANVAS
    INTERNAL_ASSERT = _soxt.SoXt_INTERNAL_ASSERT
    def setFatalErrorHandler(*args):
        """setFatalErrorHandler(FatalErrorCB cb, void userdata) -> FatalErrorCB"""
        return _soxt.SoXt_setFatalErrorHandler(*args)

    setFatalErrorHandler = staticmethod(setFatalErrorHandler)
    def isDebugLibrary():
        """isDebugLibrary() -> SbBool"""
        return _soxt.SoXt_isDebugLibrary()

    isDebugLibrary = staticmethod(isDebugLibrary)
    def isCompatible(*args):
        """isCompatible(unsigned int major, unsigned int minor) -> SbBool"""
        return _soxt.SoXt_isCompatible(*args)

    isCompatible = staticmethod(isCompatible)
    DLL = _soxt.SoXt_DLL
    LIB = _soxt.SoXt_LIB
    UNKNOWN = _soxt.SoXt_UNKNOWN
    def getABIType():
        """getABIType() -> ABIType"""
        return _soxt.SoXt_getABIType()

    getABIType = staticmethod(getABIType)
    def lockGL():
        """lockGL()"""
        return _soxt.SoXt_lockGL()

    lockGL = staticmethod(lockGL)
    def unlockGL():
        """unlockGL()"""
        return _soxt.SoXt_unlockGL()

    unlockGL = staticmethod(unlockGL)
    def nextEvent(*args):
        """nextEvent(XtAppContext arg0, XEvent arg1)"""
        return _soxt.SoXt_nextEvent(*args)

    nextEvent = staticmethod(nextEvent)
    def dispatchEvent(*args):
        """dispatchEvent(XEvent event) -> Boolean"""
        return _soxt.SoXt_dispatchEvent(*args)

    dispatchEvent = staticmethod(dispatchEvent)
    def getAppContext():
        """getAppContext() -> XtAppContext"""
        return _soxt.SoXt_getAppContext()

    getAppContext = staticmethod(getAppContext)
    def getDisplay():
        """getDisplay() -> Display"""
        return _soxt.SoXt_getDisplay()

    getDisplay = staticmethod(getDisplay)
    def encodeString(*args):
        """encodeString(char str) -> XmString"""
        return _soxt.SoXt_encodeString(*args)

    encodeString = staticmethod(encodeString)
    def decodeString(*args):
        """decodeString(XmString xstring) -> char"""
        return _soxt.SoXt_decodeString(*args)

    decodeString = staticmethod(decodeString)
    def getPopupArgs(*args):
        """getPopupArgs(Display display, int screen, ArgList args, int n)"""
        return _soxt.SoXt_getPopupArgs(*args)

    getPopupArgs = staticmethod(getPopupArgs)
    def registerColormapLoad(*args):
        """registerColormapLoad(Widget widget, Widget shell)"""
        return _soxt.SoXt_registerColormapLoad(*args)

    registerColormapLoad = staticmethod(registerColormapLoad)
    def addColormapToShell(*args):
        """addColormapToShell(Widget widget, Widget shell)"""
        return _soxt.SoXt_addColormapToShell(*args)

    addColormapToShell = staticmethod(addColormapToShell)
    def removeColormapFromShell(*args):
        """removeColormapFromShell(Widget widget, Widget shell)"""
        return _soxt.SoXt_removeColormapFromShell(*args)

    removeColormapFromShell = staticmethod(removeColormapFromShell)
    def addExtensionEventHandler(*args):
        """
        addExtensionEventHandler(Widget widget, int eventType, XtEventHandler proc, 
            XtPointer clientData)
        """
        return _soxt.SoXt_addExtensionEventHandler(*args)

    addExtensionEventHandler = staticmethod(addExtensionEventHandler)
    def removeExtensionEventHandler(*args):
        """
        removeExtensionEventHandler(Widget widget, int eventType, XtEventHandler proc, 
            XtPointer clientData)
        """
        return _soxt.SoXt_removeExtensionEventHandler(*args)

    removeExtensionEventHandler = staticmethod(removeExtensionEventHandler)
SoXt_swigregister = _soxt.SoXt_swigregister
SoXt_swigregister(SoXt)

def SoXt_init(*args):
  """
    init(char appname, char classname = "SoXt") -> Widget
    init(char appname) -> Widget
    init(int argc, char argv, char appname, char classname = "SoXt") -> Widget
    init(int argc, char argv, char appname) -> Widget
    SoXt_init(Widget toplevelwidget)
    """
  return _soxt.SoXt_init(*args)

def SoXt_mainLoop():
  """SoXt_mainLoop()"""
  return _soxt.SoXt_mainLoop()

def SoXt_exitMainLoop():
  """SoXt_exitMainLoop()"""
  return _soxt.SoXt_exitMainLoop()

def SoXt_done():
  """SoXt_done()"""
  return _soxt.SoXt_done()

def SoXt_getTopLevelWidget():
  """SoXt_getTopLevelWidget() -> Widget"""
  return _soxt.SoXt_getTopLevelWidget()

def SoXt_getShellWidget(*args):
  """SoXt_getShellWidget(Widget w) -> Widget"""
  return _soxt.SoXt_getShellWidget(*args)

def SoXt_show(*args):
  """SoXt_show(Widget widget)"""
  return _soxt.SoXt_show(*args)

def SoXt_hide(*args):
  """SoXt_hide(Widget widget)"""
  return _soxt.SoXt_hide(*args)

def SoXt_setWidgetSize(*args):
  """SoXt_setWidgetSize(Widget widget, SbVec2s size)"""
  return _soxt.SoXt_setWidgetSize(*args)

def SoXt_getWidgetSize(*args):
  """SoXt_getWidgetSize(Widget widget) -> SbVec2s"""
  return _soxt.SoXt_getWidgetSize(*args)

def SoXt_createSimpleErrorDialog(*args):
  """
    createSimpleErrorDialog(Widget widget, char title, char string1, char string2 = None)
    SoXt_createSimpleErrorDialog(Widget widget, char title, char string1)
    """
  return _soxt.SoXt_createSimpleErrorDialog(*args)

def SoXt_getVersionInfo(major = None, minor = None, micro = None):
  """
    getVersionInfo(int major = None, int minor = None, int micro = None)
    getVersionInfo(int major = None, int minor = None)
    getVersionInfo(int major = None)
    SoXt_getVersionInfo()
    """
  return _soxt.SoXt_getVersionInfo(major, minor, micro)

def SoXt_getVersionString():
  """SoXt_getVersionString() -> char"""
  return _soxt.SoXt_getVersionString()

def SoXt_getVersionToolkitString():
  """SoXt_getVersionToolkitString() -> char"""
  return _soxt.SoXt_getVersionToolkitString()

def SoXt_setFatalErrorHandler(*args):
  """SoXt_setFatalErrorHandler(FatalErrorCB cb, void userdata) -> FatalErrorCB"""
  return _soxt.SoXt_setFatalErrorHandler(*args)

def SoXt_isDebugLibrary():
  """SoXt_isDebugLibrary() -> SbBool"""
  return _soxt.SoXt_isDebugLibrary()

def SoXt_isCompatible(*args):
  """SoXt_isCompatible(unsigned int major, unsigned int minor) -> SbBool"""
  return _soxt.SoXt_isCompatible(*args)

def SoXt_getABIType():
  """SoXt_getABIType() -> ABIType"""
  return _soxt.SoXt_getABIType()

def SoXt_lockGL():
  """SoXt_lockGL()"""
  return _soxt.SoXt_lockGL()

def SoXt_unlockGL():
  """SoXt_unlockGL()"""
  return _soxt.SoXt_unlockGL()

def SoXt_nextEvent(*args):
  """SoXt_nextEvent(XtAppContext arg0, XEvent arg1)"""
  return _soxt.SoXt_nextEvent(*args)

def SoXt_dispatchEvent(*args):
  """SoXt_dispatchEvent(XEvent event) -> Boolean"""
  return _soxt.SoXt_dispatchEvent(*args)

def SoXt_getAppContext():
  """SoXt_getAppContext() -> XtAppContext"""
  return _soxt.SoXt_getAppContext()

def SoXt_getDisplay():
  """SoXt_getDisplay() -> Display"""
  return _soxt.SoXt_getDisplay()

def SoXt_encodeString(*args):
  """SoXt_encodeString(char str) -> XmString"""
  return _soxt.SoXt_encodeString(*args)

def SoXt_decodeString(*args):
  """SoXt_decodeString(XmString xstring) -> char"""
  return _soxt.SoXt_decodeString(*args)

def SoXt_getPopupArgs(*args):
  """SoXt_getPopupArgs(Display display, int screen, ArgList args, int n)"""
  return _soxt.SoXt_getPopupArgs(*args)

def SoXt_registerColormapLoad(*args):
  """SoXt_registerColormapLoad(Widget widget, Widget shell)"""
  return _soxt.SoXt_registerColormapLoad(*args)

def SoXt_addColormapToShell(*args):
  """SoXt_addColormapToShell(Widget widget, Widget shell)"""
  return _soxt.SoXt_addColormapToShell(*args)

def SoXt_removeColormapFromShell(*args):
  """SoXt_removeColormapFromShell(Widget widget, Widget shell)"""
  return _soxt.SoXt_removeColormapFromShell(*args)

def SoXt_addExtensionEventHandler(*args):
  """
    SoXt_addExtensionEventHandler(Widget widget, int eventType, XtEventHandler proc, 
        XtPointer clientData)
    """
  return _soxt.SoXt_addExtensionEventHandler(*args)

def SoXt_removeExtensionEventHandler(*args):
  """
    SoXt_removeExtensionEventHandler(Widget widget, int eventType, XtEventHandler proc, 
        XtPointer clientData)
    """
  return _soxt.SoXt_removeExtensionEventHandler(*args)

class SoXtCursor(object):
    """Proxy of C++ SoXtCursor class"""
    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    def initClass():
        """initClass()"""
        return _soxt.SoXtCursor_initClass()

    initClass = staticmethod(initClass)
    CUSTOM_BITMAP = _soxt.SoXtCursor_CUSTOM_BITMAP
    DEFAULT = _soxt.SoXtCursor_DEFAULT
    BUSY = _soxt.SoXtCursor_BUSY
    CROSSHAIR = _soxt.SoXtCursor_CROSSHAIR
    UPARROW = _soxt.SoXtCursor_UPARROW
    def __init__(self, *args): 
        """
        __init__(self) -> SoXtCursor
        __init__(self, Shape shape) -> SoXtCursor
        __init__(self, CustomCursor cc) -> SoXtCursor
        __init__(self, SoXtCursor cursor) -> SoXtCursor
        """
        this = _soxt.new_SoXtCursor(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _soxt.delete_SoXtCursor
    __del__ = lambda self : None;
    def getShape(self):
        """getShape(self) -> Shape"""
        return _soxt.SoXtCursor_getShape(self)

    def setShape(self, *args):
        """setShape(self, Shape shape)"""
        return _soxt.SoXtCursor_setShape(self, *args)

    def getCustomCursor(self):
        """getCustomCursor(self) -> CustomCursor"""
        return _soxt.SoXtCursor_getCustomCursor(self)

    def getZoomCursor():
        """getZoomCursor() -> SoXtCursor"""
        return _soxt.SoXtCursor_getZoomCursor()

    getZoomCursor = staticmethod(getZoomCursor)
    def getPanCursor():
        """getPanCursor() -> SoXtCursor"""
        return _soxt.SoXtCursor_getPanCursor()

    getPanCursor = staticmethod(getPanCursor)
    def getRotateCursor():
        """getRotateCursor() -> SoXtCursor"""
        return _soxt.SoXtCursor_getRotateCursor()

    getRotateCursor = staticmethod(getRotateCursor)
    def getBlankCursor():
        """getBlankCursor() -> SoXtCursor"""
        return _soxt.SoXtCursor_getBlankCursor()

    getBlankCursor = staticmethod(getBlankCursor)
SoXtCursor_swigregister = _soxt.SoXtCursor_swigregister
SoXtCursor_swigregister(SoXtCursor)

def SoXtCursor_initClass():
  """SoXtCursor_initClass()"""
  return _soxt.SoXtCursor_initClass()

def SoXtCursor_getZoomCursor():
  """SoXtCursor_getZoomCursor() -> SoXtCursor"""
  return _soxt.SoXtCursor_getZoomCursor()

def SoXtCursor_getPanCursor():
  """SoXtCursor_getPanCursor() -> SoXtCursor"""
  return _soxt.SoXtCursor_getPanCursor()

def SoXtCursor_getRotateCursor():
  """SoXtCursor_getRotateCursor() -> SoXtCursor"""
  return _soxt.SoXtCursor_getRotateCursor()

def SoXtCursor_getBlankCursor():
  """SoXtCursor_getBlankCursor() -> SoXtCursor"""
  return _soxt.SoXtCursor_getBlankCursor()



